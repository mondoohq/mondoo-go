// Copyright (c) Mondoo, Inc.
// SPDX-License-Identifier: MPL-2.0
//
// Code generated by gen.go; DO NOT EDIT.

package mondoogql

// Input represents one of the Input structs:
//
// APITokenOrder, AWSConfigurationOptionsInput, AWSEventPatternInput, AWSRoleCredential, AWSSecretKeyCredential, AcceptLegalPolicy, ActivePoliciesInput, ActivePolicyOrder, AddSSHKeyRequest, AdvisoryDocumentOptionsInput, AdvisoryFilter, AdvisoryOrder, AdvisorySummaryOrder, AgentOrder, AgentVersionFilter, AggregateScoreFilter, AggregateScoreOrder, AnalyseAssetVulnerabilitiesInput, AnalyseIncognitoAssetInput, ApplyExceptionForScopesInput, AssetDocumentOptionsInput, AssetEolFilter, AssetExploitableFilter, AssetFieldFiltersMutation, AssetGroupOrder, AssetLastPackageUpdateTimeInput, AssetLinkInfoInput, AssetListPoliciesFilter, AssetOSRebootFilter, AssetOrder, AssetOverviewPageInfo, AssetPackageDetailsInput, AssetPackagesStatsInput, AssetReportInput, AssetReportListPoliciesFilter, AssetReportPolicyOrder, AssetReportQueryOrder, AssetResourceInput, AssetSearchInput, AssetSearchSuggestionsInput, AssetSummaryOrder, AssetUpdateFilter, AssetUrlSegmentInput, AssetUrlStatsInput, AssetVulnerabilityReportInput, AuditLogOrder, AwsS3ConfigurationOptionsInput, AwsScanOptions, AzureBlobConfigurationOptionsInput, AzureConfigurationOptionsInput, AzureDevopsConfigurationOptionsInput, AzureDevopsTicketConfigInput, AzureDevopsTicketContextInput, AzureDevopsTicketContextProjectsInput, BigqueryConfigurationOptionsInput, BillingSessionInput, CaseContentInput, CaseRefInput, CaseTicketConfigInput, CasesConfigurationInput, CasesInput, CategoriesListInput, ChangeSubscriptionPlanInput, CheckScoreFilter, CheckScoreOrder, ChecksOrder, ChecksSearchInput, CiCdJobPageInfo, CiCdProjectPageInfo, CicdProjectJobsInput, CicdProjectOrder, CicdProjectsInput, ClientIntegrationConfigurationInput, ClientIntegrationInput, CloseCaseInput, ComplianceAssetOrder, ComplianceAssetsSearchInput, ComplianceControlInput, ComplianceFrameworkInput, ComplianceFrameworkMutationInput, ComplianceFrameworksInput, ContentSearchInput, ContentSearchResultItemOrder, ControlDocumentOptionsInput, ControlScoreFilter, ControlScoreOrder, ControlsOrder, ControlsSearchInput, CreateCaseInput, CreateClientIntegrationInput, CreateInvitationInput, CreateOrganizationInput, CreateServiceAccountInput, CreateSpaceInput, CreateWIFAuthBindingInput, CreateWorkspaceInput, CrowdstrikeFalconConfigurationOptionsInput, CveFilter, CveOrder, CveSummaryOrder, DataQueryFilter, DataQueryOrder, DeleteAPITokenInput, DeleteAgentsInput, DeleteAssetsInput, DeleteCasesInput, DeleteClientIntegrationInput, DeleteCustomPolicyInput, DeleteCustomQueryPackInput, DeleteFrameworkInput, DeleteProjectsInput, DeleteSSHKeyRequest, DeleteSSOProviderInput, DeleteServiceAccountsInput, DeleteWorkspacesInput, DownloadBundleInput, DownloadFrameworkInput, EbsScanOptionsInput, Ec2ScanOptionsInput, EmailConfigurationOptionsInput, EmailPreferenceInput, EmailRecipientInput, EmailTicketConfigInput, EnableSSOProviderInput, EolAssetsConfigurationInput, ExceptionGroupsInput, ExceptionMutationInput, ExceptionReviewInput, ExportReportFilterChecks, ExportReportFilterInventoryInput, ExportReportFilterPackages, ExportReportFilterVulnerabilitiesInput, ExportReportOptionsInput, FindingDocumentOptionsInput, FindingsFilter, FindingsOrder, FindingsPackagesFilter, FindingsWebhookPostRequest, ForkFrameworkInput, FrameworkDocumentOptionsInput, GarbageCollectAssetsConfigurationInput, GcpConfigurationOptionsInput, GcsBucketConfigurationOptionsInput, GenerateAPITokenInput, GenerateDocumentInput, GeneratePolicyInput, GetClientIntegrationDeleteCommandInput, GetClientIntegrationTokenInput, GithubConfigurationOptionsInput, GithubTicketConfigInput, GithubTicketingConfigurationOptionsInput, GitlabConfigurationOptionsInput, GitlabTicketConfigInput, GitlabTicketingConfigurationOptionsInput, GoogleWorkspaceConfigurationOptionsInput, GroupFilter, HostConfigurationOptionsInput, HostedAwsConfigurationOptionsInput, IDSuggestionInput, IntegrationInput, IntegrationOptionsInput, IntegrationsSummaryInput, InvitationOrder, JiraConfigurationOptionsInput, JiraTicketConfigInput, JiraTicketContextInput, JiraTicketContextProjectsInput, JiraTicketContextUsersInput, K8sConfigurationOptionsInput, KeyValueInput, ListClientIntegrationsFilterInput, ListClientIntegrationsInput, ListDiscoveryResultsInput, ListExceptionGroupsFilter, ListExceptionGroupsInput, ListExceptionGroupsOrder, ListFrameworksInput, ManagedClientsFilters, MembershipOrder, MicrosoftDefenderConfigurationOptionsInput, ModifyRiskFactorInput, MqueryAssetDataInput, MqueryAssetScoresInput, MqueryInput, MqueryScoreInput, Ms365ConfigurationOptionsInput, MvdV2ScanningConfigurationInput, OciConfigurationOptionsInput, OktaConfigurationOptionsInput, OrgViewPageInfo, OrganizationOverviewInput, PackageFilter, PackageInput, PackageScoresFilter, PackageScoresInput, PackageScoresOrder, PackagesOrder, PerformDiscoveryInput, PingIntegrationInput, PlatformInput, PlatformVulnerabilityConfigurationInput, PlatformsListInput, PolicyAddInput, PolicyAssignmentInput, PolicyDeleteInput, PolicyInput, PolicyReportMquerySummaryOrder, PolicyReportSummaryOrder, PostgresConfigurationOptionsInput, ProcessCaseEventsInput, PropertyQueryMutationInput, PropertyQueryMutationTarget, PropertyQueryOverride, QueryPackAddInput, RatedPoliciesInput, RegistrationTokenInput, RegistrationTokenOrder, RemediationFilter, RemediationInput, RemediationPackageFields, RemoveOrganizationMembershipInput, RemoveSpaceMembershipInput, RenderedAssetQueryDataInput, ReportViewedInfo, ReportViewedInput, RevokeRegistrationTokenInput, RiskFactorFilter, RiskFactorFilterQuery, RiskFactorMagnitudeModification, RoleInput, S3ConfigurationOptionsInput, SSOProviderInput, ScanConfigurationInput, ScimGroupMapping, ScopeDocumentOptionsInput, ScoreRange, SearchFilters, SecurityDashboardPageInfo, SentinelOneConfigurationOptionsInput, ServiceAccountOrder, SetAssetAnnotationsInput, SetCustomPolicyInput, SetCustomQueryPackInput, SetOrganizationMembershipInput, SetRoleInput, SetRolesInput, SetSSOProviderInput, SetScimGroupMappingInput, SetSpaceMembershipInput, ShodanConfigurationOptionsInput, SlackConfigurationOptionsInput, SnowflakeConfigurationOptionsInput, SpacePolicySummaryInput, SpaceSettingsInput, SpaceVulnerabilitiesInput, SpaceVulnerabilityReportInput, SubscriptionItem, SuppressIntegrationMessageInput, TerminatedAssetsConfigurationInput, TicketContextInput, TicketingIntegrationsInput, TimestampFilter, TopVulnerabilityInput, TriggerActionInput, TriggerActionOptionsInput, UnusedServiceAccountsConfigurationInput, UpdateAPITokenInput, UpdateAgentInput, UpdateClientIntegrationConfigurationInput, UpdateClientIntegrationNameInput, UpdateFindingsSLAInput, UpdateOrganizationInput, UpdateSLAsInput, UpdateSecurityModelInput, UpdateServiceAccountInput, UpdateSpaceInput, UpdateUserInput, UpdateWorkspaceInput, UploadFrameworkInput, VPCConfigurationInput, VulnDashboardStatsInput, VulnerabilityDashboardPageInfo, VulnerabilityDocumentOptionsInput, VulnerabilityScoreFilter, VulnerabilityScoreOrder, WIFAuthBindingOrder, WorkspaceConditionPossibleValuesInput, WorkspaceSelectionConditionInput, WorkspaceSelectionInput, WorkspaceSelectionIntConditionInput, WorkspaceSelectionKeyValueConditionInput, WorkspaceSelectionRatingConditionInput, WorkspaceSelectionStringConditionInput, WorkspaceSelectionsInput, WorkspacesInput, ZendeskConfigurationOptionsInput, ZendeskCustomFieldInput, ZendeskTicketConfigInput, ZendeskTicketContextInput.
type Input interface{}

// APITokenOrder
type APITokenOrder struct {
	// (Required.)
	Direction OrderDirection `json:"direction"`
	// (Required.)
	Field APITokenOrderField `json:"field"`
}

// AWSConfigurationOptionsInput represents aWS integration input.
type AWSConfigurationOptionsInput struct {
	// (Required.)
	Region String `json:"region"`
	// (Required.)
	ScanConfiguration ScanConfigurationInput `json:"scanConfiguration"`

	// (Optional.)
	AccountIDs *[]String `json:"accountIds,omitempty"`
	// (Optional.)
	IsOrganization *Boolean `json:"isOrganization,omitempty"`
	// (Optional.)
	V2Template *Boolean `json:"v2Template,omitempty"`
}

// AWSEventPatternInput represents aWSEventPatternInput describes the options for event pattern based scan triggers.
type AWSEventPatternInput struct {
	// (Required.)
	ScanType String `json:"scanType"`
	// (Required.)
	EventSource String `json:"eventSource"`
	// (Required.)
	EventDetailType String `json:"eventDetailType"`
}

// AWSRoleCredential
type AWSRoleCredential struct {
	// (Required.)
	Role String `json:"role"`

	// (Optional.)
	ExternalID *String `json:"externalId,omitempty"`
}

// AWSSecretKeyCredential
type AWSSecretKeyCredential struct {
	// (Required.)
	AccessKeyID String `json:"accessKeyId"`
	// (Required.)
	SecretAccessKey String `json:"secretAccessKey"`
}

// AcceptLegalPolicy
type AcceptLegalPolicy struct {

	// (Optional.)
	ResourceMrn *String `json:"resourceMrn,omitempty"`
	// (Optional.)
	PolicyID *String `json:"policyId,omitempty"`
}

// ActivePoliciesInput represents active policies input.
type ActivePoliciesInput struct {
	// Scope MRN the scope for which to grab the active policies. Currently, only spaces are supported. (Required.)
	ScopeMrn String `json:"scopeMrn"`

	// Filters the policies with the given query. Partial matches by name are supported. (Optional.)
	Query *String `json:"query,omitempty"`
	// The ordering of the returned policies. (Optional.)
	OrderBy *ActivePolicyOrder `json:"orderBy,omitempty"`
}

// ActivePolicyOrder represents active policy order.
type ActivePolicyOrder struct {
	// Field. (Required.)
	Field ActivePolicyOrderField `json:"field"`
	// Direction. (Required.)
	Direction OrderDirection `json:"direction"`
}

// AddSSHKeyRequest
type AddSSHKeyRequest struct {
	// (Required.)
	Mrn String `json:"mrn"`
	// (Required.)
	Content String `json:"content"`
}

// AdvisoryDocumentOptionsInput represents input options for the advisory of the document.
type AdvisoryDocumentOptionsInput struct {
	// The ID of the advisory to generate the report for. (Required.)
	AdvisoryID String `json:"advisoryId"`
	// The MRN of the scope to generate the report for. (Required.)
	ScopeMrn String `json:"scopeMrn"`
}

// AdvisoryFilter represents advisory filters.
type AdvisoryFilter struct {

	// filter by textfield input. ex.: ["CHROME-2023"] elements will be ANDed. (Optional.)
	QueryTerms *[]String `json:"queryTerms,omitempty"`
}

// AdvisoryOrder represents advisory order object.
type AdvisoryOrder struct {
	// Order direction. (Required.)
	Direction OrderDirection `json:"direction"`
	// Order field. (Required.)
	Field AdvisoryOrderField `json:"field"`
}

// AdvisorySummaryOrder represents possible advisory summary order object.
type AdvisorySummaryOrder struct {
	// Order direction. (Required.)
	Direction OrderDirection `json:"direction"`
	// Order field. (Required.)
	Field AdvisorySummaryOrderField `json:"field"`
}

// AgentOrder represents sorting for the agents.
type AgentOrder struct {
	// (Required.)
	Direction OrderDirection `json:"direction"`
	// (Required.)
	Field AgentOrderField `json:"field"`
}

// AgentVersionFilter represents input used to filter the agents by version.
type AgentVersionFilter struct {
	// (Required.)
	Version String `json:"version"`
	// (Required.)
	Not Boolean `json:"not"`
}

// AggregateScoreFilter represents aggregate score filters.
type AggregateScoreFilter struct {

	// filter by textfield input. ex.: ["CHROME-2023"] elements will be ANDed. (Optional.)
	QueryTerms *[]String `json:"queryTerms,omitempty"`
	// filter by aggregated score by finding. (Optional.)
	FindingMrn *String `json:"findingMrn,omitempty"`
	// filter by aggregated score type. (Optional.)
	ScoreType *AggregateScoreType `json:"scoreType,omitempty"`
	// filter by aggregated score types. (Optional.)
	ScoreTypes *[]AggregateScoreType `json:"scoreTypes,omitempty"`
	// filter by risk factor mrn. (Optional.)
	Risks *RiskFactorFilter `json:"risks,omitempty"`
	// filter to find all scores that are lower or equal than the provided score. (Optional.)
	MaxRiskScore *Int `json:"maxRiskScore,omitempty"`
	// filter to find all scores that are higher or equal than the provided risk value. Takes precedence over maxRiskScore. (Optional.)
	MinRiskValue *Int `json:"minRiskValue,omitempty"`
	// filter aggregated scores by findingMrn of an unversioned software package e.g., finding versions of bash by searching for //.../software/.../name/bash This filter should be used in conjunction with the scoreType filter: VERSIONED_SOFTWARE. (Optional.)
	SoftwareFindingMrn *String `json:"softwareFindingMrn,omitempty"`
	// filter by aggregate score state. If not provided, all states are returned. (Optional.)
	State *AggregateScoreState `json:"state,omitempty"`
	// Retrieve check scores by policy MRN. (Optional.)
	PolicyMrn *String `json:"policyMrn,omitempty"`
}

// AggregateScoreOrder represents aggregate score order object.
type AggregateScoreOrder struct {
	// Order direction. (Required.)
	Direction OrderDirection `json:"direction"`
	// AggregateScore field. (Required.)
	Field AggregateScoreOrderField `json:"field"`
}

// AnalyseAssetVulnerabilitiesInput represents input data for analyzing an asset.
type AnalyseAssetVulnerabilitiesInput struct {
	// Asset MRN. (Required.)
	Mrn ID `json:"mrn"`
}

// AnalyseIncognitoAssetInput represents data needed for analyzing an asset without mrn.
type AnalyseIncognitoAssetInput struct {
	// Asset platform. (Required.)
	Platform PlatformInput `json:"platform"`
	// Asset packages. (Required.)
	Packages []PackageInput `json:"packages"`

	// optional kernel information for OS. (Optional.)
	KernelVersion *String `json:"kernelVersion,omitempty"`
}

// ApplyExceptionForScopesInput represents the input to apply an exception to multiple scopes.
type ApplyExceptionForScopesInput struct {
	// The scopes of the exceptions. Can be a space or an asset mrns. (Required.)
	ScopeMrns []String `json:"scopeMrns"`
	// How this exception should be handled Snooze the controls or disable them "enable" will delete the supplied control mrn from any exception. (Required.)
	Action ExceptionMutationAction `json:"action"`

	// RFC3339 timestamp The date, from which on the exception is no longer valid. Only applies to action IGNORE, empty is interpreted as forever. (Optional.)
	ValidUntil *String `json:"validUntil,omitempty"`
	// The justification for the exception. (Optional.)
	Justification *String `json:"justification,omitempty"`
	// List of control mrns that are expected. Applies only for compliance exceptions. (Optional.)
	ControlMrns *[]String `json:"controlMrns,omitempty"`
	// List of query mrns that are expected. Applies only for security exceptions. (Optional.)
	QueryMrns *[]String `json:"queryMrns,omitempty"`
}

// AssetDocumentOptionsInput represents input options for the asset of the document.
type AssetDocumentOptionsInput struct {
	// The MRN of the asset to generate the report for. (Required.)
	AssetMrn String `json:"assetMrn"`
}

// AssetEolFilter represents asset end-of-life filter.
type AssetEolFilter struct {
	// Is end-of-life. (Required.)
	IsEol Boolean `json:"isEol"`
	// Is not end-of-life. (Required.)
	IsNotEol Boolean `json:"isNotEol"`
}

// AssetExploitableFilter represents asset exploitable filter.
type AssetExploitableFilter struct {
	// Is exploitable. (Required.)
	IsExploitable Boolean `json:"isExploitable"`
	// Is not exploitable. (Required.)
	IsNotExploitable Boolean `json:"isNotExploitable"`
}

// AssetFieldFiltersMutation
type AssetFieldFiltersMutation struct {

	// labelBasedFilters is a list of key value pairs that is converted to a mql query. The provided filters will filter against `asset.labels`. All filters are ORed together. (Optional.)
	LabelBasedFilters *[]KeyValueInput `json:"labelBasedFilters,omitempty"`
	// annotationBasedFilters is a list of key value pairs that is converted to a mql query. The provided filters will filter against `asset.annotations`. All filters are ORed together. (Optional.)
	AnnotationBasedFilters *[]KeyValueInput `json:"annotationBasedFilters,omitempty"`
}

// AssetGroupOrder represents asset group order.
type AssetGroupOrder struct {
	// Direction. (Required.)
	Direction OrderDirection `json:"direction"`
	// Field. (Required.)
	Field String `json:"field"`
}

// AssetLastPackageUpdateTimeInput represents query data for a single assets package update time.
type AssetLastPackageUpdateTimeInput struct {
	// Asset MRN. (Required.)
	Mrn ID `json:"mrn"`
}

// AssetLinkInfoInput represents asset link info input.
type AssetLinkInfoInput struct {
	// Asset ID. (Required.)
	AssetID String `json:"assetId"`
	// Space ID. (Required.)
	SpaceID String `json:"spaceID"`
}

// AssetListPoliciesFilter represents filter for the asset policies.
type AssetListPoliciesFilter struct {

	// Filters policies partially matching on policy name and MRN. (Optional.)
	Query *String `json:"query,omitempty"`
	// Filters policies by their grade. (Optional.)
	Grades *[]String `json:"grades,omitempty"`
	// Filters policies by their rating. (Optional.)
	Ratings *[]String `json:"ratings,omitempty"`
	// Filters policies by their category. (Optional.)
	Categories *[]String `json:"categories,omitempty"`
}

// AssetOSRebootFilter represents asset OS reboot filter.
type AssetOSRebootFilter struct {
	// Pending reboot. (Required.)
	PendingReboot Boolean `json:"pendingReboot"`
	// No reboot. (Required.)
	NoReboot Boolean `json:"noReboot"`
}

// AssetOrder represents asset order.
type AssetOrder struct {
	// Direction. (Required.)
	Direction OrderDirection `json:"direction"`
	// Field. (Required.)
	Field AssetOrderField `json:"field"`
}

// AssetOverviewPageInfo represents asset overview page info.
type AssetOverviewPageInfo struct {
	// Organization MRN. (Required.)
	OrgMrn String `json:"orgMrn"`
	// Space MRN. (Required.)
	SpaceMrn String `json:"spaceMrn"`
	// Asset MRN. (Required.)
	AssetMrn String `json:"assetMrn"`
	// Which tab is selected: Overview, Policies, Controls, Platform Vulnerabilities, Resources. (Required.)
	Tab String `json:"tab"`
}

// AssetPackageDetailsInput represents input for the Software package details.
type AssetPackageDetailsInput struct {
	// Asset MRN. (Required.)
	Mrn ID `json:"mrn"`
	// Package name. (Required.)
	Name String `json:"name"`

	// Package version. (Optional.)
	Version *String `json:"version,omitempty"`
}

// AssetPackagesStatsInput represents asset packages stats input.
type AssetPackagesStatsInput struct {
	// Asset MRN. (Required.)
	Mrn String `json:"mrn"`

	// Filter by state. (Optional.)
	State *ScoreStateFilter `json:"state,omitempty"`
}

// AssetReportInput represents input data for an asset report.
type AssetReportInput struct {
	// (Required.)
	AssetMrn ID `json:"assetMrn"`

	// (Optional.)
	FormatType *FormatType `json:"formatType,omitempty"`
	// (Optional.)
	PolicyFilter *[]*String `json:"policyFilter,omitempty"`
}

// AssetReportListPoliciesFilter represents filter for the asset report's policies.
type AssetReportListPoliciesFilter struct {

	// Filters policies partially matching on policy name and MRN. (Optional.)
	Query *String `json:"query,omitempty"`
	// Filters policies by their grade. (Optional.)
	Grades *[]String `json:"grades,omitempty"`
	// Filters policies by their category. (Optional.)
	Categories *[]String `json:"categories,omitempty"`
}

// AssetReportPolicyOrder represents asset report policy order.
type AssetReportPolicyOrder struct {
	// Direction. (Required.)
	Direction OrderDirection `json:"direction"`
	// Field. (Required.)
	Field AssetReportQueryOrderField `json:"field"`
}

// AssetReportQueryOrder represents asset report query order.
type AssetReportQueryOrder struct {
	// Direction. (Required.)
	Direction OrderDirection `json:"direction"`
	// Field. (Required.)
	Field AssetReportQueryOrderField `json:"field"`
}

// AssetResourceInput
type AssetResourceInput struct {
	// (Required.)
	AssetMrn String `json:"assetMrn"`

	// (Optional.)
	SelectedPaths *[]String `json:"selectedPaths,omitempty"`
	// (Optional.)
	SelectedNames *[]String `json:"selectedNames,omitempty"`
}

// AssetSearchInput
type AssetSearchInput struct {
	// Full text search query. Each term in the query will be ANDed together. The query language supports the following qualifiers: - `name`: Search for assets containing a specific name. This is the default qualifier if none is specified Example: `name:my-asset-name` - `asset`: Alias for `name` - `id`: Search for assets containing a specific asset ID. MRNs are also accepted Example: `id:my-asset-id` - `asset-id`: Alias for `id` - `label`: Search for assets containing a label a specific key and optional value. If no value is specified, the tag must exist with any value. If a value is specified, the tag must exist with that value. Example: `label:my-tag` or `label:my-tag=*` or `label:my-tag="my-value"` - `asset-label`: Alias for `label` - `annotation`: Search for assets containing a annotation a specific key and optional value. If no value is specified, the tag must exist with any value. If a value is specified, the tag must exist with that value. Example: `annotation:my-tag` or `annotation:my-tag=*` or `annotation:my-tag="my-value"` - `asset-annotation`: Alias for `annotation` - `platform`: Search for assets containing a specific platform Example: `platform:my-platform`. (Required.)
	Query String `json:"query"`

	// orgMrn is the mrn of the organization to search assets for. (Optional.)
	OrgMrn *String `json:"orgMrn,omitempty"`
	// spaceMrns is a list of space mrns to search assets for. If none are provided, all spaces in the organization will be searched. (Optional.)
	SpaceMrns *[]String `json:"spaceMrns,omitempty"`
	// Filter assets by their hierarchy. (Optional.)
	AssetURLFilter *[]AssetUrlSegmentInput `json:"assetUrlFilter,omitempty"`
}

// AssetSearchSuggestionsInput
type AssetSearchSuggestionsInput struct {

	// (Optional.)
	SpaceMrn *String `json:"spaceMrn,omitempty"`
	// (Optional.)
	ScopeMrn *String `json:"scopeMrn,omitempty"`
	// (Optional.)
	SearchKey *String `json:"searchKey,omitempty"`
	// (Optional.)
	LabelFilter *[]*KeyValueInput `json:"labelFilter,omitempty"`
	// (Optional.)
	RelatedAssetMrn *String `json:"relatedAssetMrn,omitempty"`
	// (Optional.)
	IsCiCd *Boolean `json:"isCiCd,omitempty"`
}

// AssetSummaryOrder represents asset summary order.
type AssetSummaryOrder struct {
	// Direction. (Required.)
	Direction OrderDirection `json:"direction"`
	// Field. (Required.)
	Field AssetSummaryOrderField `json:"field"`
}

// AssetUpdateFilter represents asset update filter.
type AssetUpdateFilter struct {

	// Before. (Optional.)
	Before *String `json:"before,omitempty"`
	// After. (Optional.)
	After *String `json:"after,omitempty"`
}

// AssetUrlSegmentInput
type AssetUrlSegmentInput struct {
	// The key of the URL segment to filter by. (Required.)
	Key String `json:"key"`
	// The value of the URL segment to filter by. (Required.)
	Value String `json:"value"`
}

// AssetUrlStatsInput
type AssetUrlStatsInput struct {

	// Space MRN. (Optional.)
	SpaceMrn *String `json:"spaceMrn,omitempty"`
	// Scope MRN. (Optional.)
	ScopeMrn *String `json:"scopeMrn,omitempty"`
	// Scope to score by. Default is ALL, which is a combination of the security and vulnerabilities scores. (Optional.)
	Scope *AssetUrlStatsScope `json:"scope,omitempty"`
	// Exclude stats in the listed categories. (Optional.)
	ExcludeCategories *[]AssetUrlStatsCategory `json:"excludeCategories,omitempty"`
}

// AssetVulnerabilityReportInput represents input data for an asset vulnerability report.
type AssetVulnerabilityReportInput struct {
	// (Required.)
	AssetMrn ID `json:"assetMrn"`

	// (Optional.)
	FormatType *FormatType `json:"formatType,omitempty"`
}

// AuditLogOrder
type AuditLogOrder struct {
	// (Required.)
	Direction OrderDirection `json:"direction"`
	// (Required.)
	Field AuditLogOrderField `json:"field"`
}

// AwsS3ConfigurationOptionsInput represents aWS S3 integration input.
type AwsS3ConfigurationOptionsInput struct {
	// (Required.)
	Output BucketOutputType `json:"output"`
	// (Required.)
	Bucket String `json:"bucket"`
	// (Required.)
	Region String `json:"region"`
	// (Required.)
	AccessKey String `json:"accessKey"`
	// (Required.)
	SecretAccessKey String `json:"secretAccessKey"`
}

// AwsScanOptions represents scan type provided when triggering a scan on an AWS integration.
type AwsScanOptions struct {
	// (Required.)
	ScanType String `json:"scanType"`
}

// AzureBlobConfigurationOptionsInput represents azure Blob integration input.
type AzureBlobConfigurationOptionsInput struct {
	// (Required.)
	Output BucketOutputType `json:"output"`
	// (Required.)
	BlobSasURL String `json:"blobSasURL"`
}

// AzureConfigurationOptionsInput represents azure integration input.
type AzureConfigurationOptionsInput struct {
	// (Required.)
	TenantID String `json:"tenantId"`
	// (Required.)
	ClientID String `json:"clientId"`

	// (Optional.)
	SubscriptionsWhitelist *[]String `json:"subscriptionsWhitelist,omitempty"`
	// (Optional.)
	SubscriptionsBlacklist *[]String `json:"subscriptionsBlacklist,omitempty"`
	// (Optional.)
	SubscriptionsAllowlist *[]String `json:"subscriptionsAllowlist,omitempty"`
	// (Optional.)
	SubscriptionsDenylist *[]String `json:"subscriptionsDenylist,omitempty"`
	// TODO: temporary optional, fix by having separate update models. (Optional.)
	Certificate *String `json:"certificate,omitempty"`
	// (Optional.)
	ScanVms *Boolean `json:"scanVms,omitempty"`
	// (Optional.)
	ClientSecret *String `json:"clientSecret,omitempty"`
}

// AzureDevopsConfigurationOptionsInput represents azure Devops integration input.
type AzureDevopsConfigurationOptionsInput struct {
	// (Required.)
	OrganizationURL String `json:"organizationUrl"`
	// (Required.)
	TenantID String `json:"tenantId"`
	// (Required.)
	ServicePrincipalID String `json:"servicePrincipalId"`
	// (Required.)
	ClientSecret String `json:"clientSecret"`
	// (Required.)
	AutoCloseTickets Boolean `json:"autoCloseTickets"`
	// (Required.)
	AutoCreateTickets Boolean `json:"autoCreateTickets"`

	// (Optional.)
	DefaultProjectName *String `json:"defaultProjectName,omitempty"`
}

// AzureDevopsTicketConfigInput represents azure Devops ticket configuration input.
type AzureDevopsTicketConfigInput struct {
	// The Azure Devops project name. (Required.)
	ProjectName String `json:"projectName"`
}

// AzureDevopsTicketContextInput represents parameters for AzureDevopsTicketContext.
type AzureDevopsTicketContextInput struct {
	// The type of the ticket context. (Required.)
	Type AzureDevopsTicketContextType `json:"type"`

	// The parameters for the ticket context. (Optional.)
	Projects *AzureDevopsTicketContextProjectsInput `json:"projects,omitempty"`
}

// AzureDevopsTicketContextProjectsInput represents azure Devops projects filter parameters for AzureDevopsTicketContext.
type AzureDevopsTicketContextProjectsInput struct {

	// The Azure Devops query to filter the projects by. (Optional.)
	Query *String `json:"query,omitempty"`
}

// BigqueryConfigurationOptionsInput represents bigQuery integration input.
type BigqueryConfigurationOptionsInput struct {
	// (Required.)
	DatasetID String `json:"datasetId"`
	// note: this is the content of the service account JSON file. (Required.)
	ServiceAccount String `json:"serviceAccount"`
}

// BillingSessionInput
type BillingSessionInput struct {
	// (Required.)
	OrgMrn ID `json:"orgMrn"`
	// (Required.)
	ReturnURL String `json:"returnURL"`
}

// CaseContentInput represents case content input.
type CaseContentInput struct {
	// References. (Required.)
	References []CaseRefInput `json:"references"`
	// Ticket type to generate content for. (Required.)
	Type TicketRefType `json:"type"`
}

// CaseRefInput represents case reference input.
type CaseRefInput struct {
	// MRN. Must be a query, control, CVE or advisory MRN. (Required.)
	FindingMrn String `json:"findingMrn"`
	// Scope MRN. Must be a space or an asset MRN. (Required.)
	ScopeMrn String `json:"scopeMrn"`
}

// CaseTicketConfigInput represents ticket configuration input.
type CaseTicketConfigInput struct {

	// Jira ticket configuration. (Optional.)
	Jira *JiraTicketConfigInput `json:"jira,omitempty"`
	// Email ticket configuration. (Optional.)
	Email *EmailTicketConfigInput `json:"email,omitempty"`
	// Github ticket configuration. (Optional.)
	GitHub *GithubTicketConfigInput `json:"github,omitempty"`
	// Gitlab ticket configuration. (Optional.)
	GitLab *GitlabTicketConfigInput `json:"gitlab,omitempty"`
	// Azure Devops ticket configuration. (Optional.)
	AzureDevOps *AzureDevopsTicketConfigInput `json:"azureDevops,omitempty"`
	// Zendesk ticket configuration. (Optional.)
	Zendesk *ZendeskTicketConfigInput `json:"zendesk,omitempty"`
}

// CasesConfigurationInput represents cases configuration input.
type CasesConfigurationInput struct {

	// Whether to enable auto-create cases on drift. (Optional.)
	AutoCreate *Boolean `json:"autoCreate,omitempty"`
	// Aggregate findings for the same asset within this window. The value is specified in hours. 0 means no aggregation. (Optional.)
	AggregationWindow *Int `json:"aggregationWindow,omitempty"`
}

// CasesInput represents cases input.
type CasesInput struct {
	// The scope of the cases to list. (Required.)
	ScopeMrn String `json:"scopeMrn"`

	// A context MRN to filter workspaces by. Can be used when the scope is an asset MRN. If specified, will show only cases for the given asset in the provided context. For example, if scope is asset MRN and context MRN is workspace MRN, will show only workspaces that have the asset in the given workspace. (Optional.)
	ContextMrn *String `json:"contextMrn,omitempty"`
	// Finding MRNs. If set, will only return cases with the specified finding MRNs. (Optional.)
	FindingMrns *[]String `json:"findingMrns,omitempty"`
	// Case statuses. If set, will only return cases with the specified statuses. (Optional.)
	Statuses *[]CaseStatus `json:"statuses,omitempty"`
}

// CategoriesListInput represents input for retrieving a list of categories for the scope.
type CategoriesListInput struct {
	// scopeMrn is the space mrn the user is requesting categories for. The returned response will contain all public categories unioned with categories appearing in content for this space. (Required.)
	ScopeMrn String `json:"scopeMrn"`
}

// ChangeSubscriptionPlanInput
type ChangeSubscriptionPlanInput struct {
	// (Required.)
	OrgMrn ID `json:"orgMrn"`
	// (Required.)
	ReturnURL String `json:"returnURL"`
	// (Required.)
	Confirm Boolean `json:"confirm"`

	// (Optional.)
	Items *[]SubscriptionItem `json:"items,omitempty"`
	// (Optional.)
	ProrationDate *Int `json:"prorationDate,omitempty"`
}

// CheckScoreFilter represents check score filters.
type CheckScoreFilter struct {

	// Filter by state. (Optional.)
	State *ScoreStateFilter `json:"state,omitempty"`
	// Optional query terms. Will return only vulnerabilities containing the term in their MRN. (Optional.)
	QueryTerms *[]String `json:"queryTerms,omitempty"`
	// Filter the result by a check mrn. (Optional.)
	CheckMrn *String `json:"checkMrn,omitempty"`
	// Filter the result by a policy mrn. (Optional.)
	PolicyMrn *String `json:"policyMrn,omitempty"`
	// Whether to include checks for CI/CD assets in the results. (Optional.)
	IncludeCicd *Boolean `json:"includeCicd,omitempty"`
	// Filter by impact. (Optional.)
	Impact *[]QueryImpact `json:"impact,omitempty"`
}

// CheckScoreOrder represents check score order.
type CheckScoreOrder struct {
	// Direction. (Required.)
	Direction OrderDirection `json:"direction"`
	// Field. (Required.)
	Field CheckScoreOrderField `json:"field"`
}

// ChecksOrder represents checks order.
type ChecksOrder struct {
	// Direction. (Required.)
	Direction OrderDirection `json:"direction"`
	// Field. (Required.)
	Field ChecksOrderField `json:"field"`
}

// ChecksSearchInput represents checks search input.
type ChecksSearchInput struct {
	// Scope MRN. (Required.)
	ScopeMrn String `json:"scopeMrn"`
	// Framework MRN. (Required.)
	FrameworkMrn String `json:"frameworkMrn"`

	// Query to search checks by, currently searches by the check name only. (Optional.)
	Query *String `json:"query,omitempty"`
	// Determines the ordering. (Optional.)
	OrderBy *ChecksOrder `json:"orderBy,omitempty"`
}

// CiCdJobPageInfo
type CiCdJobPageInfo struct {
	// (Required.)
	OrgMrn String `json:"orgMrn"`
	// (Required.)
	SpaceMrn String `json:"spaceMrn"`
	// (Required.)
	AssetMrn String `json:"assetMrn"`
	// (Required.)
	Tab String `json:"tab"`
}

// CiCdProjectPageInfo
type CiCdProjectPageInfo struct {
	// (Required.)
	OrgMrn String `json:"orgMrn"`
	// (Required.)
	SpaceMrn String `json:"spaceMrn"`
	// (Required.)
	ProjectMrn String `json:"projectMrn"`
}

// CicdProjectJobsInput
type CicdProjectJobsInput struct {
	// (Required.)
	SpaceMrn ID `json:"spaceMrn"`
	// (Required.)
	ProjectID ID `json:"projectId"`
}

// CicdProjectOrder
type CicdProjectOrder struct {
	// (Required.)
	Direction OrderDirection `json:"direction"`
	// (Required.)
	Field CicdProjectOrderField `json:"field"`
}

// CicdProjectsInput
type CicdProjectsInput struct {
	// (Required.)
	SpaceMrn ID `json:"spaceMrn"`

	// (Optional.)
	TypeFilter *String `json:"typeFilter,omitempty"`
}

// ClientIntegrationConfigurationInput represents configuration options for client integrations.
type ClientIntegrationConfigurationInput struct {

	// (Optional.)
	K8sConfigurationOptions *K8sConfigurationOptionsInput `json:"k8sConfigurationOptions,omitempty"`
	// (Optional.)
	AwsConfigurationOptions *AWSConfigurationOptionsInput `json:"awsConfigurationOptions,omitempty"`
	// (Optional.)
	AzureConfigurationOptions *AzureConfigurationOptionsInput `json:"azureConfigurationOptions,omitempty"`
	// (Optional.)
	AzureBlobConfigurationOptions *AzureBlobConfigurationOptionsInput `json:"azureBlobConfigurationOptions,omitempty"`
	// (Optional.)
	Ms365ConfigurationOptions *Ms365ConfigurationOptionsInput `json:"ms365ConfigurationOptions,omitempty"`
	// (Optional.)
	GcpConfigurationOptions *GcpConfigurationOptionsInput `json:"gcpConfigurationOptions,omitempty"`
	// (Optional.)
	HostConfigurationOptions *HostConfigurationOptionsInput `json:"hostConfigurationOptions,omitempty"`
	// (Optional.)
	GoogleWorkspaceConfigurationOptions *GoogleWorkspaceConfigurationOptionsInput `json:"googleWorkspaceConfigurationOptions,omitempty"`
	// (Optional.)
	OktaConfigurationOptions *OktaConfigurationOptionsInput `json:"oktaConfigurationOptions,omitempty"`
	// (Optional.)
	BigqueryConfigurationOptions *BigqueryConfigurationOptionsInput `json:"bigqueryConfigurationOptions,omitempty"`
	// (Optional.)
	SnowflakeConfigurationOptions *SnowflakeConfigurationOptionsInput `json:"snowflakeConfigurationOptions,omitempty"`
	// (Optional.)
	AwsS3ConfigurationOptions *AwsS3ConfigurationOptionsInput `json:"awsS3ConfigurationOptions,omitempty"`
	// (Optional.)
	S3ConfigurationOptions *S3ConfigurationOptionsInput `json:"s3ConfigurationOptions,omitempty"`
	// (Optional.)
	SlackConfigurationOptions *SlackConfigurationOptionsInput `json:"slackConfigurationOptions,omitempty"`
	// (Optional.)
	GitHubConfigurationOptions *GithubConfigurationOptionsInput `json:"githubConfigurationOptions,omitempty"`
	// (Optional.)
	GitLabConfigurationOptions *GitlabConfigurationOptionsInput `json:"gitlabConfigurationOptions,omitempty"`
	// (Optional.)
	GcsBucketConfigurationOptions *GcsBucketConfigurationOptionsInput `json:"gcsBucketConfigurationOptions,omitempty"`
	// (Optional.)
	PostgresConfigurationOptions *PostgresConfigurationOptionsInput `json:"postgresConfigurationOptions,omitempty"`
	// (Optional.)
	OciConfigurationOptions *OciConfigurationOptionsInput `json:"ociConfigurationOptions,omitempty"`
	// (Optional.)
	JiraConfigurationOptions *JiraConfigurationOptionsInput `json:"jiraConfigurationOptions,omitempty"`
	// (Optional.)
	AwsHostedConfigurationOptions *HostedAwsConfigurationOptionsInput `json:"awsHostedConfigurationOptions,omitempty"`
	// (Optional.)
	EmailConfigurationOptions *EmailConfigurationOptionsInput `json:"emailConfigurationOptions,omitempty"`
	// (Optional.)
	ZendeskConfigurationOptions *ZendeskConfigurationOptionsInput `json:"zendeskConfigurationOptions,omitempty"`
	// (Optional.)
	MicrosoftDefenderConfigurationOptions *MicrosoftDefenderConfigurationOptionsInput `json:"microsoftDefenderConfigurationOptions,omitempty"`
	// (Optional.)
	GitHubTicketingConfigurationOptions *GithubTicketingConfigurationOptionsInput `json:"githubTicketingConfigurationOptions,omitempty"`
	// (Optional.)
	GitLabTicketingConfigurationOptions *GitlabTicketingConfigurationOptionsInput `json:"gitlabTicketingConfigurationOptions,omitempty"`
	// (Optional.)
	ShodanConfigurationOptions *ShodanConfigurationOptionsInput `json:"shodanConfigurationOptions,omitempty"`
	// (Optional.)
	AzureDevOpsConfigurationOptions *AzureDevopsConfigurationOptionsInput `json:"azureDevopsConfigurationOptions,omitempty"`
	// (Optional.)
	SentinelOneConfigurationOptions *SentinelOneConfigurationOptionsInput `json:"sentinelOneConfigurationOptions,omitempty"`
	// (Optional.)
	CrowdstrikeFalconConfigurationOptions *CrowdstrikeFalconConfigurationOptionsInput `json:"crowdstrikeFalconConfigurationOptions,omitempty"`
}

// ClientIntegrationInput represents input for client integration.
type ClientIntegrationInput struct {
	// (Required.)
	Mrn String `json:"mrn"`

	// (Optional.)
	WithToken *Boolean `json:"withToken,omitempty"`
}

// CloseCaseInput represents close case input.
type CloseCaseInput struct {
	// MRN of the case to close. (Required.)
	Mrn String `json:"mrn"`
}

// ComplianceAssetOrder represents compliance asset order.
type ComplianceAssetOrder struct {
	// Direction. (Required.)
	Direction OrderDirection `json:"direction"`
	// Field. (Required.)
	Field ComplianceAssetOrderField `json:"field"`
}

// ComplianceAssetsSearchInput represents compliance assets search input.
type ComplianceAssetsSearchInput struct {
	// Search query. (Required.)
	Query String `json:"query"`

	// after is the pagination cursor. To paginate to the end of the search results, keep calling search the the endCursor from the pageInfo response while the hasNextPage field is true. (Optional.)
	After *String `json:"after,omitempty"`
	// first is the number of items to return. Defaults to 100. (Optional.)
	First *Int `json:"first,omitempty"`
	// The asset group filters that match the assets. (Optional.)
	Groups *[]GroupFilter `json:"groups,omitempty"`
	// Order by. (Optional.)
	OrderBy *ComplianceAssetOrder `json:"orderBy,omitempty"`
}

// ComplianceControlInput represents compliance control input.
type ComplianceControlInput struct {
	// Framework MRN. (Required.)
	FrameworkMrn String `json:"frameworkMrn"`
	// Control MRN. (Required.)
	ControlMrn String `json:"controlMrn"`
	// Scope MRN. (Required.)
	ScopeMrn String `json:"scopeMrn"`
}

// ComplianceFrameworkInput represents compliance framework input.
type ComplianceFrameworkInput struct {
	// The scope mrn for which to fetch the compliance framework. (Required.)
	ScopeMrn String `json:"scopeMrn"`
	// The compliance framework mrn. (Required.)
	FrameworkMrn String `json:"frameworkMrn"`
}

// ComplianceFrameworkMutationInput represents compliance framework mutation input.
type ComplianceFrameworkMutationInput struct {
	// Framework MRN. (Required.)
	FrameworkMrn String `json:"frameworkMrn"`
	// Scope MRN. (Required.)
	ScopeMrn String `json:"scopeMrn"`
	// Action. (Required.)
	Action ComplianceFrameworkMutationAction `json:"action"`
}

// ComplianceFrameworksInput represents compliance frameworks input.
type ComplianceFrameworksInput struct {
	// The scope mrn for which to fetch compliance frameworks. Currently only supported is a space mrn. (Required.)
	ScopeMrn String `json:"scopeMrn"`

	// The framework state to filter by. (Optional.)
	State *ComplianceFrameworkState `json:"state,omitempty"`
	// The framework states to filter by. (Optional.)
	States *[]ComplianceFrameworkState `json:"states,omitempty"`
}

// ContentSearchInput represents input for searching for policies or registries.
type ContentSearchInput struct {
	// scopeMrn is the space mrn the user is requesting content for. Private content will only be searched from this space. (Required.)
	ScopeMrn String `json:"scopeMrn"`
	// catalogType is the type of content items to consider. (Required.)
	CatalogType CatalogType `json:"catalogType"`

	// A list of platforms that a content item must match. Only content matching all platforms will be considered. (Optional.)
	Platforms *[]String `json:"platforms,omitempty"`
	// A list of categories that a content item can match. Content matching at least one of the provided will be considered. (Optional.)
	Categories *[]String `json:"categories,omitempty"`
	// includePrivate indicates whether to include private content. Defaults to true. (Optional.)
	IncludePrivate *Boolean `json:"includePrivate,omitempty"`
	// includePublic indicates whether to include mondoo provided content. Defaults to true. (Optional.)
	IncludePublic *Boolean `json:"includePublic,omitempty"`
	// contentMrns is a list of mrns to consider. If none are provided, all will be considered Useful for text searching a specific set of content, like active policies. (Optional.)
	ContentMrns *[]String `json:"contentMrns,omitempty"`
	// If assignedOnly is set to true, only policies that are assigned will be considered. (Optional.)
	AssignedOnly *Boolean `json:"assignedOnly,omitempty"`
	// Full text search query. Each term in the query will be ANDed together. (Optional.)
	Query *String `json:"query,omitempty"`
	// after is the pagination cursor. To paginate to the end of the search results, keep calling search the the endCursor from the pageInfo response while the hasNextPage field is true. (Optional.)
	After *String `json:"after,omitempty"`
	// limit is the number of items to return. Defaults to 100. (Optional.)
	Limit *Int `json:"limit,omitempty"`
	// (Optional.)
	OrderBy *ContentSearchResultItemOrder `json:"orderBy,omitempty"`
}

// ContentSearchResultItemOrder represents user defined order direction and field.
type ContentSearchResultItemOrder struct {
	// The direction to order the results. (Required.)
	Direction OrderDirection `json:"direction"`
	// The field to order the results. (Required.)
	Field ContentSearchResultItemOrderField `json:"field"`
}

// ControlDocumentOptionsInput represents input options for the controls of the document.
type ControlDocumentOptionsInput struct {
	// The MRN of the framework the control is for. (Required.)
	FrameworkMRN String `json:"frameworkMRN"`
	// The MRN of the control. (Required.)
	ControlMRN String `json:"controlMRN"`
}

// ControlScoreFilter represents control score filters.
type ControlScoreFilter struct {

	// Filter by state. (Optional.)
	State *ScoreStateFilter `json:"state,omitempty"`
	// Optional query terms. Will return only vulnerabilities containing the term in their MRN. (Optional.)
	QueryTerms *[]String `json:"queryTerms,omitempty"`
	// Filter the result by a control mrn. (Optional.)
	ControlMrn *String `json:"controlMrn,omitempty"`
	// Whether to include controls for CI/CD assets in the results. (Optional.)
	IncludeCicd *Boolean `json:"includeCicd,omitempty"`
}

// ControlScoreOrder represents control score order.
type ControlScoreOrder struct {
	// Direction. (Required.)
	Direction OrderDirection `json:"direction"`
	// Field. (Required.)
	Field ControlScoreOrderField `json:"field"`
}

// ControlsOrder represents controls order.
type ControlsOrder struct {
	// Direction. (Required.)
	Direction OrderDirection `json:"direction"`
	// Field. (Required.)
	Field ControlsOrderField `json:"field"`
}

// ControlsSearchInput represents controls search input.
type ControlsSearchInput struct {

	// query, used to search on controls' or policies' description. (Optional.)
	Query *String `json:"query,omitempty"`
	// after is the pagination cursor. To paginate to the end of the search results, keep calling search the the endCursor from the pageInfo response while the hasNextPage field is true. (Optional.)
	After *String `json:"after,omitempty"`
	// limit is the number of items to return. Defaults to 100. (Optional.)
	Limit *Int `json:"limit,omitempty"`
	// Order by. (Optional.)
	OrderBy *ControlsOrder `json:"orderBy,omitempty"`
}

// CreateCaseInput represents the input to create a case.
type CreateCaseInput struct {
	// Title. (Required.)
	Title String `json:"title"`
	// Notes. (Required.)
	Notes String `json:"notes"`
	// References. (Required.)
	References []CaseRefInput `json:"references"`
	// Ticket configuration. (Required.)
	TicketConfig CaseTicketConfigInput `json:"ticketConfig"`

	// Ticketing integration MRN. (Optional.)
	IntegrationMrn *String `json:"integrationMrn,omitempty"`
	// Optional workspace MRN. If specified, the case will be created in the workspace. It is required that the case references are contained in the space that owns the provided workspace. (Optional.)
	WorkspaceMrn *String `json:"workspaceMrn,omitempty"`
}

// CreateClientIntegrationInput represents input provided when creating a client integration.
type CreateClientIntegrationInput struct {
	// (Required.)
	SpaceMrn String `json:"spaceMrn"`
	// (Required.)
	Name String `json:"name"`
	// (Required.)
	Type ClientIntegrationType `json:"type"`
	// (Required.)
	LongLivedToken Boolean `json:"longLivedToken"`
	// (Required.)
	ConfigurationOptions ClientIntegrationConfigurationInput `json:"configurationOptions"`
}

// CreateInvitationInput
type CreateInvitationInput struct {
	// (Required.)
	ResourceMrn String `json:"resourceMrn"`
	// (Required.)
	RoleMrn String `json:"roleMrn"`

	// (Optional.)
	InviteeMrn *String `json:"inviteeMrn,omitempty"`
	// (Optional.)
	InviteeEmail *String `json:"inviteeEmail,omitempty"`
	// (Optional.)
	ExpiresAt *String `json:"expiresAt,omitempty"`
	// (Optional.)
	Message *String `json:"message,omitempty"`
}

// CreateOrganizationInput represents create organization input.
type CreateOrganizationInput struct {
	// Name. (Required.)
	Name String `json:"name"`

	// ID. (Optional.)
	ID *String `json:"id,omitempty"`
	// Description. (Optional.)
	Description *String `json:"description,omitempty"`
}

// CreateServiceAccountInput
type CreateServiceAccountInput struct {
	// (Required.)
	ScopeMrn String `json:"scopeMrn"`

	// (Optional.)
	Description *String `json:"description,omitempty"`
	// (Optional.)
	Labels *[]KeyValueInput `json:"labels,omitempty"`
	// (Optional.)
	Roles *[]RoleInput `json:"roles,omitempty"`
	// (Optional.)
	Name *String `json:"name,omitempty"`
	// (Optional.)
	ValidUntil *String `json:"validUntil,omitempty"`
}

// CreateSpaceInput represents create space input.
type CreateSpaceInput struct {
	// Name. (Required.)
	Name String `json:"name"`
	// Organization MRN. (Required.)
	OrgMrn String `json:"orgMrn"`

	// ID. (Optional.)
	ID *String `json:"id,omitempty"`
	// Description. (Optional.)
	Description *String `json:"description,omitempty"`
	// Settings. (Optional.)
	Settings *SpaceSettingsInput `json:"settings,omitempty"`
}

// CreateWIFAuthBindingInput
type CreateWIFAuthBindingInput struct {
	// Space mrn associated with the binding. (Required.)
	ScopeMrn String `json:"scopeMrn"`
	// User selected name. (Required.)
	Name String `json:"name"`
	// URI for the token issuer, e.g. https://accounts.google.com. (Required.)
	IssuerURI String `json:"issuerUri"`
	// Unique identifier to confirm. (Required.)
	Subject String `json:"subject"`

	// Optional description. (Optional.)
	Description *String `json:"description,omitempty"`
	// List of roles associated with the binding (e.g. agent mrn). (Optional.)
	Roles *[]String `json:"roles,omitempty"`
	// Expiration in seconds associated with the binding. (Optional.)
	Expiration *Int `json:"expiration,omitempty"`
	// List of additional configurations to confirm. (Optional.)
	Mappings *[]KeyValueInput `json:"mappings,omitempty"`
	// List of allowed audiences. (Optional.)
	AllowedAudiences *[]String `json:"allowedAudiences,omitempty"`
}

// CreateWorkspaceInput represents create workspace input.
type CreateWorkspaceInput struct {
	// The MRN of the owner of the workspace. (Required.)
	OwnerMrn String `json:"ownerMrn"`
	// The name of the workspace. (Required.)
	Name String `json:"name"`
	// Workspace selections. (Required.)
	Selections WorkspaceSelectionsInput `json:"selections"`

	// Description of the workspace. (Optional.)
	Description *String `json:"description,omitempty"`
}

// CrowdstrikeFalconConfigurationOptionsInput represents crowdstrikeFalcon integration input.
type CrowdstrikeFalconConfigurationOptionsInput struct {
	// Client ID used for authentication with CrowdStrike Falcon platform. (Required.)
	ClientID String `json:"clientId"`
	// Client Secret used for authentication with CrowdStrike Falcon platform. (Required.)
	ClientSecret String `json:"clientSecret"`

	// The CrowdStrike Falcon cloud region. (Optional.)
	Cloud *String `json:"cloud,omitempty"`
	// CID selector for cases when the client id/secret has access to multiple CIDs. (Optional.)
	MemberCID *String `json:"memberCID,omitempty"`
	// createAssets is a flag to create assets in the backend when they are not found. (Optional.)
	CreateAssets *Boolean `json:"createAssets,omitempty"`
}

// CveFilter represents cVE filters.
type CveFilter struct {

	// filter by textfield input. ex.: ["CHROME-2023"] elements will be ANDed. (Optional.)
	QueryTerms *[]String `json:"queryTerms,omitempty"`
}

// CveOrder represents cve order object.
type CveOrder struct {
	// Order direction. (Required.)
	Direction OrderDirection `json:"direction"`
	// Order field. (Required.)
	Field CveOrderField `json:"field"`
}

// CveSummaryOrder represents cve summary order object.
type CveSummaryOrder struct {
	// Order direction. (Required.)
	Direction OrderDirection `json:"direction"`
	// Order field. (Required.)
	Field CveSummaryOrderField `json:"field"`
}

// DataQueryFilter represents data query filters.
type DataQueryFilter struct {

	// Optional query terms. Will return only vulnerabilities containing the term in their MRN. (Optional.)
	QueryTerms *[]String `json:"queryTerms,omitempty"`
	// Filter the result by a query mrn. (Optional.)
	QueryMrn *String `json:"queryMrn,omitempty"`
	// Filter the result by a policy mrn. (Optional.)
	PolicyMrn *String `json:"policyMrn,omitempty"`
	// Whether to include checks for CI/CD assets in the results. (Optional.)
	IncludeCicd *Boolean `json:"includeCicd,omitempty"`
}

// DataQueryOrder represents data query order.
type DataQueryOrder struct {
	// Direction. (Required.)
	Direction OrderDirection `json:"direction"`
	// Field. (Required.)
	Field DataQueryOrderField `json:"field"`
}

// DeleteAPITokenInput
type DeleteAPITokenInput struct {
	// (Required.)
	Mrn String `json:"mrn"`
}

// DeleteAgentsInput represents input used when deleting an agent.
type DeleteAgentsInput struct {
	// (Required.)
	SpaceMrn String `json:"spaceMrn"`
	// (Required.)
	AgentMrns []String `json:"agentMrns"`
}

// DeleteAssetsInput represents delete assets input.
type DeleteAssetsInput struct {
	// Space MRN. (Required.)
	SpaceMrn String `json:"spaceMrn"`

	// Asset MRNs. (Optional.)
	AssetMrns *[]ID `json:"assetMrns,omitempty"`
}

// DeleteCasesInput represents delete cases input.
type DeleteCasesInput struct {
	// MRNs of cases to delete. (Required.)
	Mrns []String `json:"mrns"`
}

// DeleteClientIntegrationInput represents input for deleting a client integration.
type DeleteClientIntegrationInput struct {
	// (Required.)
	Mrn String `json:"mrn"`
}

// DeleteCustomPolicyInput represents input for deleting a policy.
type DeleteCustomPolicyInput struct {
	// The mrn of the policy. (Required.)
	PolicyMrn String `json:"policyMrn"`
}

// DeleteCustomQueryPackInput represents input for deleting a query pack.
type DeleteCustomQueryPackInput struct {
	// The mrn of the query pack. (Required.)
	QueryPackMrn String `json:"queryPackMrn"`
}

// DeleteFrameworkInput represents delete framework input.
type DeleteFrameworkInput struct {
	// Framework MRN. (Required.)
	Mrn String `json:"mrn"`
}

// DeleteProjectsInput
type DeleteProjectsInput struct {
	// (Required.)
	Mrns []String `json:"mrns"`
}

// DeleteSSHKeyRequest
type DeleteSSHKeyRequest struct {
	// (Required.)
	Mrn String `json:"mrn"`
	// (Required.)
	Fingerprint String `json:"fingerprint"`
}

// DeleteSSOProviderInput
type DeleteSSOProviderInput struct {
	// (Required.)
	OrganizationMrn String `json:"organizationMrn"`
}

// DeleteServiceAccountsInput
type DeleteServiceAccountsInput struct {
	// (Required.)
	ScopeMrn String `json:"scopeMrn"`
	// (Required.)
	Mrns []String `json:"mrns"`
}

// DeleteWorkspacesInput represents delete workspaces input.
type DeleteWorkspacesInput struct {
	// MRNs of workspaces to delete. (Required.)
	Mrns []String `json:"mrns"`
}

// DownloadBundleInput represents download bundle input.
type DownloadBundleInput struct {
	// The mrn is a unique identifier. (Required.)
	Mrn String `json:"mrn"`
}

// DownloadFrameworkInput represents download framework input.
type DownloadFrameworkInput struct {
	// Framework MRN. (Required.)
	Mrn String `json:"mrn"`
	// Scope MRN. (Required.)
	ScopeMrn String `json:"scopeMrn"`

	// Whether to include all evidence in the bundle. By default, only evidence for activated policies is returned. (Optional.)
	AllEvidence *Boolean `json:"allEvidence,omitempty"`
}

// EbsScanOptionsInput represents options for EBS scanning with the AWS integration.
type EbsScanOptionsInput struct {

	// (Optional.)
	TargetInstancesPerScanner *Int `json:"targetInstancesPerScanner,omitempty"`
	// (Optional.)
	MaxAsgInstances *Int `json:"maxAsgInstances,omitempty"`
}

// Ec2ScanOptionsInput represents options for EC2 scans with the AWS integration.
type Ec2ScanOptionsInput struct {

	// (Optional.)
	Ssm *Boolean `json:"ssm,omitempty"`
	// (Optional.)
	InstanceIDsFilter *[]String `json:"instanceIdsFilter,omitempty"`
	// (Optional.)
	RegionsFilter *[]String `json:"regionsFilter,omitempty"`
	// (Optional.)
	TagsFilter *Map `json:"tagsFilter,omitempty"`
	// (Optional.)
	EbsVolumeScan *Boolean `json:"ebsVolumeScan,omitempty"`
	// (Optional.)
	EbsScanOptions *EbsScanOptionsInput `json:"ebsScanOptions,omitempty"`
	// (Optional.)
	InstanceConnect *Boolean `json:"instanceConnect,omitempty"`
	// (Optional.)
	ExcludedInstanceIDsFilter *[]String `json:"excludedInstanceIdsFilter,omitempty"`
	// (Optional.)
	ExcludedRegionsFilter *[]String `json:"excludedRegionsFilter,omitempty"`
	// (Optional.)
	ExcludedTagsFilter *Map `json:"excludedTagsFilter,omitempty"`
}

// EmailConfigurationOptionsInput represents email integration input.
type EmailConfigurationOptionsInput struct {
	// A list of potential email recipients. (Required.)
	Recipients []EmailRecipientInput `json:"recipients"`

	// Whether to auto-create tickets for new cases. (Optional.)
	AutoCreateTickets *Boolean `json:"autoCreateTickets,omitempty"`
	// Whether to auto-close tickets for closed cases. (Optional.)
	AutoCloseTickets *Boolean `json:"autoCloseTickets,omitempty"`
}

// EmailPreferenceInput
type EmailPreferenceInput struct {
	// (Required.)
	ListID EmailPreferenceList `json:"listID"`
	// (Required.)
	Subscribe Boolean `json:"subscribe"`
}

// EmailRecipientInput represents email recipient input.
type EmailRecipientInput struct {
	// Name of the recipient. (Required.)
	Name String `json:"name"`
	// Email of the recipient. (Required.)
	Email String `json:"email"`
	// Whether this recipient is the default recipient. (Required.)
	IsDefault Boolean `json:"isDefault"`

	// An optional reference URL that will get attached to the ticket reference created by this integration. (Optional.)
	ReferenceURL *String `json:"referenceUrl,omitempty"`
}

// EmailTicketConfigInput represents email ticket configuration input.
type EmailTicketConfigInput struct {
	// Email address to send the ticket to. (Required.)
	EmailAddress String `json:"emailAddress"`
}

// EnableSSOProviderInput
type EnableSSOProviderInput struct {
	// (Required.)
	OrganizationMrn String `json:"organizationMrn"`
	// (Required.)
	Enabled Boolean `json:"enabled"`
}

// EolAssetsConfigurationInput represents eol assets configuration input.
type EolAssetsConfigurationInput struct {

	// Whether to enable EOL assets analysis. (Optional.)
	Enable *Boolean `json:"enable,omitempty"`
	// How many months in advance should EOL be applied as risk factor. (Optional.)
	MonthsInAdvance *Int `json:"monthsInAdvance,omitempty"`
}

// ExceptionGroupsInput represents the input to get a list of exception groups.
type ExceptionGroupsInput struct {
	// The mrn of the space/asset. (Required.)
	ScopeMrn String `json:"scopeMrn"`

	// The mrn to filter on. It can be a query, control, policy or a framework. (Optional.)
	Mrn *String `json:"mrn,omitempty"`
	// Deprecated. Use the types field. (Optional.)
	Type *ExceptionType `json:"type,omitempty"`
	// The types of the exceptions. (Optional.)
	Types *[]ExceptionType `json:"types,omitempty"`
	// The action of the exception groups. Empty list means all. (Optional.)
	Actions *[]ExceptionMutationAction `json:"actions,omitempty"`
}

// ExceptionMutationInput represents the input to apply an exception.
type ExceptionMutationInput struct {
	// The scope of the exception. Can be a space or an asset mrn. (Required.)
	ScopeMrn String `json:"scopeMrn"`
	// How this exception should be handled Snooze the controls or disable them "enable" will delete the supplied control mrn from any exception. (Required.)
	Action ExceptionMutationAction `json:"action"`

	// DEPRECATED. WILL BE REMOVED ONCE THE UI IS OUT the resource to apply the exception to, e.g. a framework. (Optional.)
	ResourceMrn *String `json:"resourceMrn,omitempty"`
	// DEPRECATED. WILL BE REMOVED ONCE THE UI IS OUT List of mrns that are excepted. (Optional.)
	ExceptionMrns *[]String `json:"exceptionMrns,omitempty"`
	// RFC3339 timestamp The date, from which on the exception is no longer valid. Only applies to action IGNORE, empty is interpreted as forever. (Optional.)
	ValidUntil *String `json:"validUntil,omitempty"`
	// The justification for the exception. (Optional.)
	Justification *String `json:"justification,omitempty"`
	// List of control mrns that are excepted. Applies only for compliance exceptions. (Optional.)
	ControlMrns *[]String `json:"controlMrns,omitempty"`
	// List of query mrns that are excepted. Applies only for security exceptions. (Optional.)
	QueryMrns *[]String `json:"queryMrns,omitempty"`
	// List of cve mrns that are excepted. Applies only for cve exceptions. (Optional.)
	CveMrns *[]String `json:"cveMrns,omitempty"`
	// List of advisory mrns that are excepted. Applies only for cve exceptions. (Optional.)
	AdvisoryMrns *[]String `json:"advisoryMrns,omitempty"`
	// Apply the exception to the CVEs that are part of the advisories. Applies only for advisory exceptions. (Optional.)
	ApplyToCves *Boolean `json:"applyToCves,omitempty"`
}

// ExceptionReviewInput represents the input to apply a review to an exception.
type ExceptionReviewInput struct {
	// The scope of the exception. Can be a space or an asset mrn. (Required.)
	ScopeMrn String `json:"scopeMrn"`
	// The id of the exception to review. (Required.)
	ExceptionID String `json:"exceptionId"`
	// The review action to be applied. (Required.)
	Action ExceptionReviewAction `json:"action"`
}

// ExportReportFilterChecks
type ExportReportFilterChecks struct {
	// (Required.)
	Enable Boolean `json:"enable"`
}

// ExportReportFilterInventoryInput
type ExportReportFilterInventoryInput struct {
	// (Required.)
	Enable Boolean `json:"enable"`
	// (Required.)
	Data Boolean `json:"data"`
}

// ExportReportFilterPackages
type ExportReportFilterPackages struct {
	// (Required.)
	Enable Boolean `json:"enable"`
}

// ExportReportFilterVulnerabilitiesInput
type ExportReportFilterVulnerabilitiesInput struct {
	// (Required.)
	Enable Boolean `json:"enable"`
}

// ExportReportOptionsInput
type ExportReportOptionsInput struct {

	// (Optional.)
	Inventory *ExportReportFilterInventoryInput `json:"inventory,omitempty"`
	// (Optional.)
	Vulnerabilities *ExportReportFilterVulnerabilitiesInput `json:"vulnerabilities,omitempty"`
	// (Optional.)
	Checks *ExportReportFilterChecks `json:"checks,omitempty"`
	// (Optional.)
	Packages *ExportReportFilterPackages `json:"packages,omitempty"`
}

// FindingDocumentOptionsInput represents input options for the finding of the document.
type FindingDocumentOptionsInput struct {
	// The MRN of the finding to generate the report for. (Required.)
	FindingMrn String `json:"findingMrn"`
	// The MRN of the scope to generate the report for. (Required.)
	ScopeMrn String `json:"scopeMrn"`
}

// FindingsFilter represents findings filters.
type FindingsFilter struct {

	// Filter by state. (Optional.)
	State *ScoreStateFilter `json:"state,omitempty"`
	// Optional query terms. Will return only vulnerabilities containing the term in their MRN. (Optional.)
	QueryTerms *[]String `json:"queryTerms,omitempty"`
	// Filter the result by mrn. (Optional.)
	Mrn *String `json:"mrn,omitempty"`
	// Filter the result by a policy mrn. Applicable only for checks. (Optional.)
	PolicyMrn *String `json:"policyMrn,omitempty"`
	// Whether to include checks for CI/CD assets in the results. (Optional.)
	IncludeCicd *Boolean `json:"includeCicd,omitempty"`
	// Filter by score rating. (Optional.)
	Rating *[]ScoreRating `json:"rating,omitempty"`
	// Filter by finding type. (Optional.)
	Types *[]FindingType `json:"types,omitempty"`
	// Filter vulnerabilities by findingMrn of a versioned software package e.g., finding versions of bash 5.0.1 by searching for //.../software/.../name/bash/5.0.1. (Optional.)
	SoftwareFindingMrn *String `json:"softwareFindingMrn,omitempty"`
	// Filter by risk factor MRNs. (Optional.)
	RiskFactors *RiskFactorFilter `json:"riskFactors,omitempty"`
	// Filters applicable only for package findings. (Optional.)
	Package *FindingsPackagesFilter `json:"package,omitempty"`
}

// FindingsOrder represents findings order.
type FindingsOrder struct {
	// Direction. (Required.)
	Direction OrderDirection `json:"direction"`
	// Field. (Required.)
	Field FindingsOrderField `json:"field"`
}

// FindingsPackagesFilter represents findings packages filter.
type FindingsPackagesFilter struct {

	// Package version. (Optional.)
	PackageVersion *String `json:"packageVersion,omitempty"`
}

// FindingsWebhookPostRequest
type FindingsWebhookPostRequest struct {
	// (Required.)
	ScopeMrn String `json:"scopeMrn"`
	// (Required.)
	Type FindingType `json:"type"`
	// (Required.)
	FindingMrn String `json:"findingMrn"`
}

// ForkFrameworkInput represents fork framework input.
type ForkFrameworkInput struct {
	// The MRN of the framework to fork. (Required.)
	Mrn String `json:"mrn"`
	// Space MRN. (Required.)
	SpaceMrn String `json:"spaceMrn"`

	// Whether to include all evidence in the bundle. By default, only evidence for activated policies is returned. (Optional.)
	AllEvidence *Boolean `json:"allEvidence,omitempty"`
}

// FrameworkDocumentOptionsInput represents input options for framework document.
type FrameworkDocumentOptionsInput struct {
	// The MRN of the framework. (Required.)
	FrameworkMRN String `json:"frameworkMRN"`
}

// GarbageCollectAssetsConfigurationInput represents garbage collect assets configuration input.
type GarbageCollectAssetsConfigurationInput struct {

	// Whether to enable garbage collection. (Optional.)
	Enable *Boolean `json:"enable,omitempty"`
	// After how many days to garbage collect. (Optional.)
	AfterDays *Int `json:"afterDays,omitempty"`
}

// GcpConfigurationOptionsInput represents gCP integration input.
type GcpConfigurationOptionsInput struct {

	// (Optional.)
	ProjectID *String `json:"projectId,omitempty"`
	// (Optional.)
	OrganizationID *String `json:"organizationId,omitempty"`
	// note: this is the content of the service account JSON file. (Optional.)
	ServiceAccount *String `json:"serviceAccount,omitempty"`
	// (Optional.)
	DiscoverAll *Boolean `json:"discoverAll,omitempty"`
}

// GcsBucketConfigurationOptionsInput represents gCS Bucket integration input.
type GcsBucketConfigurationOptionsInput struct {
	// (Required.)
	Output BucketOutputType `json:"output"`
	// (Required.)
	Bucket String `json:"bucket"`
	// note: this is the content of the service account JSON file. (Required.)
	ServiceAccount String `json:"serviceAccount"`
}

// GenerateAPITokenInput
type GenerateAPITokenInput struct {
	// (Required.)
	Name String `json:"name"`

	// (Optional.)
	SpaceMrn *String `json:"spaceMrn,omitempty"`
	// (Optional.)
	ScopeMrn *String `json:"scopeMrn,omitempty"`
	// (Optional.)
	Description *String `json:"description,omitempty"`
	// (Optional.)
	Roles *[]RoleInput `json:"roles,omitempty"`
}

// GenerateDocumentInput represents input when generating a document.
type GenerateDocumentInput struct {
	// The MRN of the space. (Required.)
	ScopeMRN String `json:"scopeMRN"`
	// The format of the document. (Required.)
	Format DocumentFormat `json:"format"`
	// The type of the document. (Required.)
	Type DocumentType `json:"type"`
	// The name of the document to generate. (Required.)
	Name String `json:"name"`

	// The MRN of the resource for which the document is being generated. (Optional.)
	TargetMRN *String `json:"targetMRN,omitempty"`
	// Options for generating a framework document. (Optional.)
	FrameworkOptions *FrameworkDocumentOptionsInput `json:"frameworkOptions,omitempty"`
	// Options for generating a control document. (Optional.)
	ControlOptions *ControlDocumentOptionsInput `json:"controlOptions,omitempty"`
	// Options for generating an asset report document. (Optional.)
	AssetReportOptions *AssetDocumentOptionsInput `json:"assetReportOptions,omitempty"`
	// Options for generating an advisory report document. (Optional.)
	AdvisoryReportOptions *AdvisoryDocumentOptionsInput `json:"advisoryReportOptions,omitempty"`
	// Options for generating a vulnerability report document. (Optional.)
	VulnerabilityReportOptions *VulnerabilityDocumentOptionsInput `json:"vulnerabilityReportOptions,omitempty"`
	// Options for generating a finding report document. (Optional.)
	FindingReportOptions *FindingDocumentOptionsInput `json:"findingReportOptions,omitempty"`
	// Options for generating a scope report document. (Optional.)
	ScopeReportOptions *ScopeDocumentOptionsInput `json:"scopeReportOptions,omitempty"`
	// Options for generating an export document. (Optional.)
	ExportOptions *ExportReportOptionsInput `json:"exportOptions,omitempty"`
	// Whether to capture debug information. (Optional.)
	CaptureDebug *Boolean `json:"captureDebug,omitempty"`
}

// GeneratePolicyInput represents input type for GeneratePolicyInput.
type GeneratePolicyInput struct {
	// Scope mrn. (Required.)
	ScopeMrn String `json:"scopeMrn"`
	// Prompt for policy generation. (Required.)
	Prompts []String `json:"prompts"`
	// Providers to use for policy generation. (Required.)
	Providers []String `json:"providers"`

	// Indicates if the generated policy should be stored in the space. (Optional.)
	StoreInSpace *Boolean `json:"storeInSpace,omitempty"`
}

// GetClientIntegrationDeleteCommandInput represents inputs used to get the delete command for a client integration (used for K8s).
type GetClientIntegrationDeleteCommandInput struct {
	// (Required.)
	Mrn String `json:"mrn"`
	// (Required.)
	Type ClientIntegrationType `json:"type"`
}

// GetClientIntegrationTokenInput represents input provided when fetching a token for a client integration.
type GetClientIntegrationTokenInput struct {
	// (Required.)
	Mrn String `json:"mrn"`

	// (Optional.)
	LongLivedToken *Boolean `json:"longLivedToken,omitempty"`
}

// GithubConfigurationOptionsInput represents github integration input.
type GithubConfigurationOptionsInput struct {
	// (Required.)
	Type GithubIntegrationType `json:"type"`

	// Repository owner. Must be provided in combination with repository. (Optional.)
	Owner *String `json:"owner,omitempty"`
	// Repository name. Must be provided in combination with owner. (Optional.)
	Repository *String `json:"repository,omitempty"`
	// Organization. If specified, the integration will scan the complete organization. (Optional.)
	Organization *String `json:"organization,omitempty"`
	// (Optional.)
	Token *String `json:"token,omitempty"`
	// Scan only the repositories matching these glob patterns. Only applicable when type is ORG. (Optional.)
	ReposAllowList *[]String `json:"reposAllowList,omitempty"`
	// Scan all repositories except the ones matching these glob patterns. Only applicable when type is ORG. (Optional.)
	ReposDenyList *[]String `json:"reposDenyList,omitempty"`
	// Discover Terraform files in the repositories. (Optional.)
	DiscoverTerraform *Boolean `json:"discoverTerraform,omitempty"`
	// Discover k8s manifests in the repositories. (Optional.)
	DiscoverK8sManifests *Boolean `json:"discoverK8sManifests,omitempty"`
	// Github Enterprise Server URL. (Optional.)
	EnterpriseURL *String `json:"enterpriseUrl,omitempty"`
}

// GithubTicketConfigInput represents github ticket configuration input.
type GithubTicketConfigInput struct {
	// The Github repo owner. (Required.)
	Owner String `json:"owner"`
	// The Github repo. (Required.)
	Repo String `json:"repo"`
}

// GithubTicketingConfigurationOptionsInput represents github ticketing integration input.
type GithubTicketingConfigurationOptionsInput struct {
	// (Required.)
	Token String `json:"token"`
	// (Required.)
	AutoCloseTickets Boolean `json:"autoCloseTickets"`
	// (Required.)
	AutoCreateTickets Boolean `json:"autoCreateTickets"`

	// (Optional.)
	EnterpriseURL *String `json:"enterpriseUrl,omitempty"`
	// (Optional.)
	DefaultRepoOwner *String `json:"defaultRepoOwner,omitempty"`
	// (Optional.)
	DefaultRepoName *String `json:"defaultRepoName,omitempty"`
}

// GitlabConfigurationOptionsInput represents gitlab integration input.
type GitlabConfigurationOptionsInput struct {
	// (Required.)
	Type GitlabIntegrationType `json:"type"`

	// (Optional.)
	Group *String `json:"group,omitempty"`
	// (Optional.)
	Token *String `json:"token,omitempty"`
	// (Optional.)
	DiscoverGroups *Boolean `json:"discoverGroups,omitempty"`
	// (Optional.)
	DiscoverProjects *Boolean `json:"discoverProjects,omitempty"`
	// (Optional.)
	DiscoverTerraform *Boolean `json:"discoverTerraform,omitempty"`
	// (Optional.)
	DiscoverK8sManifests *Boolean `json:"discoverK8sManifests,omitempty"`
	// (Optional.)
	BaseURL *String `json:"baseUrl,omitempty"`
}

// GitlabTicketConfigInput represents gitlab ticket configuration input.
type GitlabTicketConfigInput struct {
	// The Gitlab project. (Required.)
	Project String `json:"project"`
}

// GitlabTicketingConfigurationOptionsInput represents gitlab ticketing integration input.
type GitlabTicketingConfigurationOptionsInput struct {
	// (Required.)
	Token String `json:"token"`
	// (Required.)
	AutoCloseTickets Boolean `json:"autoCloseTickets"`
	// (Required.)
	AutoCreateTickets Boolean `json:"autoCreateTickets"`

	// (Optional.)
	BaseURL *String `json:"baseUrl,omitempty"`
	// (Optional.)
	DefaultProject *String `json:"defaultProject,omitempty"`
}

// GoogleWorkspaceConfigurationOptionsInput represents google Workspace integration input.
type GoogleWorkspaceConfigurationOptionsInput struct {
	// (Required.)
	CustomerID String `json:"customerId"`
	// (Required.)
	ImpersonatedUserEmail String `json:"impersonatedUserEmail"`

	// note: this is the content of the service account JSON file. (Optional.)
	ServiceAccount *String `json:"serviceAccount,omitempty"`
}

// GroupFilter represents group filter.
type GroupFilter struct {
	// Group type. (Required.)
	GroupType String `json:"groupType"`

	// Asset types. (Optional.)
	AssetTypes *[]String `json:"assetTypes,omitempty"`
}

// HostConfigurationOptionsInput represents host integration input.
type HostConfigurationOptionsInput struct {
	// (Required.)
	Host String `json:"host"`

	// (Optional.)
	HTTPS *Boolean `json:"https,omitempty"`
	// (Optional.)
	HTTP *Boolean `json:"http,omitempty"`
}

// HostedAwsConfigurationOptionsInput represents hosted AWS integration input.
type HostedAwsConfigurationOptionsInput struct {

	// (Optional.)
	KeyCredential *AWSSecretKeyCredential `json:"keyCredential,omitempty"`
	// (Optional.)
	RoleCredential *AWSRoleCredential `json:"roleCredential,omitempty"`
}

// IDSuggestionInput represents iD suggestion input.
type IDSuggestionInput struct {

	// Parent MRN. (Optional.)
	ParentMrn *String `json:"parentMrn,omitempty"`
	// ID available. (Optional.)
	IDAvailable *String `json:"idAvailable,omitempty"`
}

// IntegrationInput represents input options provided when creating a chatops integration.
type IntegrationInput struct {
	// (Required.)
	Mrn String `json:"mrn"`
	// (Required.)
	Name String `json:"name"`
	// (Required.)
	Enabled Boolean `json:"enabled"`

	// (Optional.)
	Options *IntegrationOptionsInput `json:"options,omitempty"`
}

// IntegrationOptionsInput represents options for chatops integration.
type IntegrationOptionsInput struct {

	// (Optional.)
	URL *String `json:"url,omitempty"`
	// (Optional.)
	Chatid *String `json:"chatid,omitempty"`
	// (Optional.)
	Token *String `json:"token,omitempty"`
}

// IntegrationsSummaryInput represents input for summary of client integrations.
type IntegrationsSummaryInput struct {
	// (Required.)
	SpaceMrn String `json:"spaceMrn"`
}

// InvitationOrder
type InvitationOrder struct {
	// (Required.)
	Direction OrderDirection `json:"direction"`
	// (Required.)
	Field InvitationOrderField `json:"field"`
}

// JiraConfigurationOptionsInput represents jira integration input.
type JiraConfigurationOptionsInput struct {
	// (Required.)
	Host String `json:"host"`
	// (Required.)
	Email String `json:"email"`
	// (Required.)
	APIToken String `json:"apiToken"`
	// (Required.)
	DefaultProject String `json:"defaultProject"`

	// (Optional.)
	AutoCloseTickets *Boolean `json:"autoCloseTickets,omitempty"`
	// (Optional.)
	AutoCreateCases *Boolean `json:"autoCreateCases,omitempty"`
}

// JiraTicketConfigInput represents jira ticket configuration input.
type JiraTicketConfigInput struct {
	// The Jira project key. (Required.)
	ProjectKey String `json:"projectKey"`
	// The Jira issue type. (Required.)
	IssueType String `json:"issueType"`
}

// JiraTicketContextInput represents parameters for JiraTicketContext.
type JiraTicketContextInput struct {
	// The type of the ticket context. (Required.)
	Type JiraTicketContextType `json:"type"`

	// The parameters for the ticket context. (Optional.)
	Projects *JiraTicketContextProjectsInput `json:"projects,omitempty"`
	// The parameters for the ticket context. (Optional.)
	Users *JiraTicketContextUsersInput `json:"users,omitempty"`
}

// JiraTicketContextProjectsInput represents jira Projects filter parameters for JiraTicketContext.
type JiraTicketContextProjectsInput struct {

	// The Jira query to filter the projects by. (Optional.)
	Query *String `json:"query,omitempty"`
}

// JiraTicketContextUsersInput represents jira Users filter parameters for JiraTicketContext.
type JiraTicketContextUsersInput struct {
	// The Jira project key to filter the users by. (Required.)
	ProjectKey String `json:"projectKey"`

	// The query to filter the users by. (Optional.)
	Query *String `json:"query,omitempty"`
}

// K8sConfigurationOptionsInput represents k8s integration input.
type K8sConfigurationOptionsInput struct {
	// (Required.)
	ScanNodes Boolean `json:"scanNodes"`
	// (Required.)
	ScanWorkloads Boolean `json:"scanWorkloads"`
	// (Required.)
	ScanDeploys Boolean `json:"scanDeploys"`

	// (Optional.)
	ScanNodesStyle *K8sScanNodesStyle `json:"scanNodesStyle,omitempty"`
	// (Optional.)
	CertificateManager *String `json:"certificateManager,omitempty"`
	// (Optional.)
	ScanPublicImages *Boolean `json:"scanPublicImages,omitempty"`
	// (Optional.)
	NamespaceAllowList *[]String `json:"namespaceAllowList,omitempty"`
	// (Optional.)
	NamespaceDenyList *[]String `json:"namespaceDenyList,omitempty"`
}

// KeyValueInput
type KeyValueInput struct {
	// (Required.)
	Key String `json:"key"`

	// (Optional.)
	Value *String `json:"value,omitempty"`
}

// ListClientIntegrationsFilterInput represents listClientIntegrationsFilterInput provides filtering options for listing the client integrations.
type ListClientIntegrationsFilterInput struct {

	// type is deprecated, use types. (Optional.)
	Type *ClientIntegrationType `json:"type,omitempty"`
	// (Optional.)
	Types *[]*ClientIntegrationType `json:"types,omitempty"`
	// (Optional.)
	ManagedClientsFilters *ManagedClientsFilters `json:"managedClientsFilters,omitempty"`
}

// ListClientIntegrationsInput represents listClientIntegrationsInput describes the input for listing the integrations.
type ListClientIntegrationsInput struct {
	// (Required.)
	SpaceMrn String `json:"spaceMrn"`

	// (Optional.)
	FilterQuery *ListClientIntegrationsFilterInput `json:"filterQuery,omitempty"`
}

// ListDiscoveryResultsInput represents list discovery results input.
type ListDiscoveryResultsInput struct {
	// The mrn is a unique identifier. (Required.)
	Mrn String `json:"mrn"`
}

// ListExceptionGroupsFilter represents list exception groups filters.
type ListExceptionGroupsFilter struct {

	// Filter by review status. (Optional.)
	ReviewStatuses *[]ReviewStatus `json:"reviewStatuses,omitempty"`
	// Filter by valid until date. Input is string date. The BE logic is exception.ValidUntil <= filter.validUntil. (Optional.)
	ValidUntil *String `json:"validUntil,omitempty"`
	// Filter by id of exception group. (Optional.)
	ID *String `json:"id,omitempty"`
}

// ListExceptionGroupsInput represents the input to get a list of exception groups.
type ListExceptionGroupsInput struct {
	// The mrn of the space/asset. (Required.)
	ScopeMrn String `json:"scopeMrn"`

	// The mrn to filter on. It can be a query, control, policy or a framework. (Optional.)
	Mrn *String `json:"mrn,omitempty"`
	// The types of the exceptions. (Optional.)
	Types *[]ExceptionType `json:"types,omitempty"`
	// The action of the exception groups. Empty list means all. (Optional.)
	Actions *[]ExceptionMutationAction `json:"actions,omitempty"`
	// Order by. If not provided the default ordering is by valid until and uid asc. (Optional.)
	OrderBy *ListExceptionGroupsOrder `json:"orderBy,omitempty"`
	// Additional filters. (Optional.)
	Filter *ListExceptionGroupsFilter `json:"filter,omitempty"`
	// Flag indicating whether to include exceptions in child scopes If scopeMrn is a space and this flag is true, all exceptions defined on the space and on all of the space's assets will be returned. (Optional.)
	IncludeChildScopes *Boolean `json:"includeChildScopes,omitempty"`
}

// ListExceptionGroupsOrder represents exception groups order.
type ListExceptionGroupsOrder struct {
	// Direction. (Required.)
	Direction OrderDirection `json:"direction"`
	// Field. (Required.)
	Field ListExceptionGroupsOrderField `json:"field"`
}

// ListFrameworksInput
type ListFrameworksInput struct {
	// The scope mrn for which to fetch frameworks. Currently only supported is a space mrn. (Required.)
	ScopeMrn String `json:"scopeMrn"`
	// The framework state to filter by. (Required.)
	FilterState ListFrameworksFilterState `json:"filterState"`
}

// ManagedClientsFilters represents filters that can be used when listing managed clients.
type ManagedClientsFilters struct {

	// (Optional.)
	QueryStrings *[]String `json:"queryStrings,omitempty"`
	// (Optional.)
	Version *[]AgentVersionFilter `json:"version,omitempty"`
	// (Optional.)
	State *[]AgentState `json:"state,omitempty"`
	// (Optional.)
	OrderBy *AgentOrder `json:"orderBy,omitempty"`
}

// MembershipOrder
type MembershipOrder struct {
	// (Required.)
	Direction OrderDirection `json:"direction"`
	// (Required.)
	Field MembershipOrderField `json:"field"`
}

// MicrosoftDefenderConfigurationOptionsInput represents microsoft Defender integration input.
type MicrosoftDefenderConfigurationOptionsInput struct {
	// tenantId of the MS Defender instance. (Required.)
	TenantID String `json:"tenantId"`
	// clientId of the MS Defender instance. (Required.)
	ClientID String `json:"clientId"`

	// subscriptionsAllowlist is a list of subscription IDs to include in the scan. (Optional.)
	SubscriptionsAllowlist *[]String `json:"subscriptionsAllowlist,omitempty"`
	// subscriptionsDenylist is a list of subscription IDs to exclude from the scan. (Optional.)
	SubscriptionsDenylist *[]String `json:"subscriptionsDenylist,omitempty"`
	// certificate or client secret is required. (Optional.)
	Certificate *String `json:"certificate,omitempty"`
	// password used for authentication. (Optional.)
	ClientSecret *String `json:"clientSecret,omitempty"`
	// createAssets is a flag to create assets in the backend when they are not found. (Optional.)
	CreateAssets *Boolean `json:"createAssets,omitempty"`
}

// ModifyRiskFactorInput
type ModifyRiskFactorInput struct {
	// Risk factor mrn. (Required.)
	Mrn String `json:"mrn"`

	// Risk factor magnitude modification. (Optional.)
	Magnitude *RiskFactorMagnitudeModification `json:"magnitude,omitempty"`
	// (Optional.)
	Action *RiskFactorAction `json:"action,omitempty"`
	// Asset field filters mutation. (Optional.)
	AssetFieldFiltersMutation *AssetFieldFiltersMutation `json:"assetFieldFiltersMutation,omitempty"`
}

// MqueryAssetDataInput represents mquery asset data input.
type MqueryAssetDataInput struct {
	// scopeMrn is the MRN of the space in which to search for assets. (Required.)
	ScopeMrn String `json:"scopeMrn"`
	// queryMrn is the MRN of the query to run. (Required.)
	QueryMrn String `json:"queryMrn"`

	// See AssetSearchInput. (Optional.)
	Query *String `json:"query,omitempty"`
	// Format. (Optional.)
	Format *MqueryAssetDataFormat `json:"format,omitempty"`
}

// MqueryAssetScoresInput represents mquery asset scores input.
type MqueryAssetScoresInput struct {
	// scopeMrn is the MRN of the space in which to search for assets. (Required.)
	ScopeMrn String `json:"scopeMrn"`
	// queryMrn is the MRN of the query to run. (Required.)
	QueryMrn String `json:"queryMrn"`

	// See AssetSearchInput. (Optional.)
	Query *String `json:"query,omitempty"`
	// After is the pagination cursor. To paginate to the end of the search results, keep calling search the the endCursor from the pageInfo response while the hasNextPage field is true. (Optional.)
	After *String `json:"after,omitempty"`
	// Limit is the number of items to return. Defaults to 25. (Optional.)
	Limit *Int `json:"limit,omitempty"`
	// Order by. (Optional.)
	OrderBy *AssetOrder `json:"orderBy,omitempty"`
	// policyMrn is the MRN of the policy which the query is associated with. If this is provided, the queryMrn will be converted to a code id. This is temporary. We need to capture scores as MRNs, not code ids. Until that happens, we need this. (Optional.)
	PolicyMrn *String `json:"policyMrn,omitempty"`
}

// MqueryInput represents mqueryInput.
type MqueryInput struct {
	// The mrn is a unique identifier. (Required.)
	Mrn String `json:"mrn"`
}

// MqueryScoreInput represents mquery score input.
type MqueryScoreInput struct {
	// scopeMrn is the MRN of the space in which to search for assets. (Required.)
	ScopeMrn String `json:"scopeMrn"`
	// queryMrn is the MRN of the query to run. (Required.)
	QueryMrn String `json:"queryMrn"`
}

// Ms365ConfigurationOptionsInput represents mS365 integration input.
type Ms365ConfigurationOptionsInput struct {
	// (Required.)
	TenantID String `json:"tenantId"`
	// (Required.)
	ClientID String `json:"clientId"`

	// TODO: temporary optional, fix by having separate update models. (Optional.)
	Certificate *String `json:"certificate,omitempty"`
}

// MvdV2ScanningConfigurationInput represents mVD v2 scanning configuration.
type MvdV2ScanningConfigurationInput struct {

	// Disabled ecosystems. (Optional.)
	DisabledEcosystems *[]MvdEcosystem `json:"disabledEcosystems,omitempty"`
}

// OciConfigurationOptionsInput represents oCI integration input.
type OciConfigurationOptionsInput struct {
	// (Required.)
	TenancyOcid String `json:"tenancyOcid"`
	// (Required.)
	UserOcid String `json:"userOcid"`
	// (Required.)
	Region String `json:"region"`
	// (Required.)
	Fingerprint String `json:"fingerprint"`

	// (Optional.)
	PrivateKey *String `json:"privateKey,omitempty"`
}

// OktaConfigurationOptionsInput represents okta integration input.
type OktaConfigurationOptionsInput struct {
	// (Required.)
	Organization String `json:"organization"`

	// (Optional.)
	Token *String `json:"token,omitempty"`
}

// OrgViewPageInfo represents org view page info.
type OrgViewPageInfo struct {
	// Organization MRN. (Required.)
	OrgMrn String `json:"orgMrn"`
}

// OrganizationOverviewInput represents organization overview input.
type OrganizationOverviewInput struct {
	// Organization MRN. (Required.)
	OrganizationMrn String `json:"organizationMrn"`
}

// PackageFilter represents package filters.
type PackageFilter struct {

	// filter by textfield input. ex.: ["Chrome", "Firefox"] elements will be ANDed. (Optional.)
	QueryTerms *[]String `json:"queryTerms,omitempty"`
	// os package or app. (Optional.)
	Type *PackageType `json:"type,omitempty"`
	// is package affected by a CVE?. (Optional.)
	IsVulnerable *Boolean `json:"isVulnerable,omitempty"`
	// packageName is a filter with exact match The queryTerms are a "contains" search. That's useful for the general search. But for the softwareDetails we need to search for the exact package name. (Optional.)
	PackageName *String `json:"packageName,omitempty"`
}

// PackageInput represents package input.
type PackageInput struct {
	// Package name. (Required.)
	Name String `json:"name"`
	// Package version. (Required.)
	Version String `json:"version"`

	// Package arch. (Optional.)
	Arch *String `json:"arch,omitempty"`
	// Package format. (Optional.)
	Format *String `json:"format,omitempty"`
	// Package origin, needed for debian. (Optional.)
	Origin *String `json:"origin,omitempty"`
}

// PackageScoresFilter represents package filters.
type PackageScoresFilter struct {

	// filter by textfield input. ex.: ["Chrome", "Firefox"] elements will be ANDed. (Optional.)
	QueryTerms *[]String `json:"queryTerms,omitempty"`
	// os package or app. (Optional.)
	Type *PackageType `json:"type,omitempty"`
	// is package affected by a CVE?. (Optional.)
	IsVulnerable *Boolean `json:"isVulnerable,omitempty"`
	// Package version. (Optional.)
	PackageVersion *String `json:"packageVersion,omitempty"`
}

// PackageScoresInput represents packageScores input data This requires either a spaceMrn AND a findingMrn OR only an assetMrn.
type PackageScoresInput struct {

	// Space MRN. (Optional.)
	SpaceMrn *String `json:"spaceMrn,omitempty"`
	// Package/Finding mrn. (Optional.)
	FindingMrn *String `json:"findingMrn,omitempty"`
	// Asset or Space MRN. (Optional.)
	EntityMrn *String `json:"entityMrn,omitempty"`
	// Package version (optional). (Optional.)
	PackageVersion *String `json:"packageVersion,omitempty"`
	// Filter. (Optional.)
	Filter *PackageScoresFilter `json:"filter,omitempty"`
}

// PackageScoresOrder represents packageScores order.
type PackageScoresOrder struct {
	// Order direction. (Required.)
	Direction OrderDirection `json:"direction"`
	// Order field. (Required.)
	Field PackageScoresOrderField `json:"field"`
}

// PackagesOrder represents package order object.
type PackagesOrder struct {
	// Order direction. (Required.)
	Direction OrderDirection `json:"direction"`
	// Order field. (Required.)
	Field PackagesOrderField `json:"field"`
}

// PerformDiscoveryInput represents input options for discovery job on client integration.
type PerformDiscoveryInput struct {
	// (Required.)
	Mrn String `json:"mrn"`
}

// PingIntegrationInput represents inputs used to ping a client integration.
type PingIntegrationInput struct {
	// (Required.)
	Mrn String `json:"mrn"`

	// Optional source identifier, e.g. AWS account id. (Optional.)
	Identifiers *[]String `json:"identifiers,omitempty"`
}

// PlatformInput represents platform input.
type PlatformInput struct {

	// The name of the platform. (Optional.)
	Name *String `json:"name,omitempty"`
	// The release of the platform. (Optional.)
	Release *String `json:"release,omitempty"`
	// The build of the platform. (Optional.)
	Build *String `json:"build,omitempty"`
	// The architecture of the platform. (Optional.)
	Arch *String `json:"arch,omitempty"`
	// The kind of the platform. (Optional.)
	Kind *PlatformKind `json:"kind,omitempty"`
	// The runtime of the platform. (Optional.)
	Runtime *String `json:"runtime,omitempty"`
	// The labels of the platform. (Optional.)
	Labels *[]*KeyValueInput `json:"labels,omitempty"`
	// The platform families. (Optional.)
	Family *[]*String `json:"family,omitempty"`
}

// PlatformVulnerabilityConfigurationInput represents platform vulnerability configuration input.
type PlatformVulnerabilityConfigurationInput struct {

	// Whether to enable platform vulnerability analysis. (Optional.)
	Enable *Boolean `json:"enable,omitempty"`
}

// PlatformsListInput represents input for retrieving a list of platforms for the scope.
type PlatformsListInput struct {
	// scopeMrn is the space mrn the user is requesting platforms for. The returned response will contain all public platforms unioned with platforms appearing in content for this space. (Required.)
	ScopeMrn String `json:"scopeMrn"`
}

// PolicyAddInput represents policyAddInput.
type PolicyAddInput struct {
	// The mrn of the space. (Required.)
	SpaceMrn String `json:"spaceMrn"`
	// RFC2397, base64 encoded policy bundle. (Required.)
	Dataurl String `json:"dataurl"`

	// Force. (Optional.)
	Force *Boolean `json:"force,omitempty"`
}

// PolicyAssignmentInput represents policy assignment input.
type PolicyAssignmentInput struct {
	// The mrn of the asset. (Required.)
	AssetMrn String `json:"assetMrn"`

	// The mrn of the policy. (Optional.)
	PolicyMrn *String `json:"policyMrn,omitempty"`
	// Policy MRNs. (Optional.)
	PolicyMrns *[]String `json:"policyMrns,omitempty"`
	// Action. (Optional.)
	Action *PolicyAction `json:"action,omitempty"`
	// Scoring System. (Optional.)
	ScoringSystem *ScoringSystem `json:"scoringSystem,omitempty"`
}

// PolicyDeleteInput represents policy delete input.
type PolicyDeleteInput struct {
	// The mrn of the policy. (Required.)
	PolicyMrn String `json:"policyMrn"`
}

// PolicyInput represents policyInput.
type PolicyInput struct {

	// The mrn is a unique identifier. (Optional.)
	Mrn *String `json:"mrn,omitempty"`
	// spaceMrn must be provided if you want to know if the policy is assigned. (Optional.)
	SpaceMrn *String `json:"spaceMrn,omitempty"`
	// variant. (Optional.)
	Variant *String `json:"variant,omitempty"`
	// variantPlatformFilter allows filter the variants by a target platform id. (Optional.)
	VariantPlatformFilter *String `json:"variantPlatformFilter,omitempty"`
}

// PolicyReportMquerySummaryOrder represents policy report mquery summary order.
type PolicyReportMquerySummaryOrder struct {
	// Direction. (Required.)
	Direction OrderDirection `json:"direction"`
	// Field. (Required.)
	Field PolicyReportMquerySummaryOrderField `json:"field"`
}

// PolicyReportSummaryOrder represents policy report summary order.
type PolicyReportSummaryOrder struct {
	// Direction. (Required.)
	Direction OrderDirection `json:"direction"`
	// Field. (Required.)
	Field PolicyReportSummaryOrderField `json:"field"`
}

// PostgresConfigurationOptionsInput represents postgres integration input.
type PostgresConfigurationOptionsInput struct {
	// (Required.)
	Host String `json:"host"`
	// (Required.)
	Port String `json:"port"`
	// (Required.)
	Database String `json:"database"`
	// (Required.)
	User String `json:"user"`
	// (Required.)
	Password String `json:"password"`
}

// ProcessCaseEventsInput represents process case events input.
type ProcessCaseEventsInput struct {
	// MRN of the scope to process events for. (Required.)
	ScopeMrn String `json:"scopeMrn"`
}

// PropertyQueryMutationInput represents property query mutation input.
type PropertyQueryMutationInput struct {
	// Target to apply scoring mutation to. Can be an space/asset mrn. Or an asset filter. (Required.)
	Target PropertyQueryMutationTarget `json:"target"`
	// The action to apply. (Required.)
	Action PropertyQueryMutationAction `json:"action"`

	// A list of properties to apply the action to. (Optional.)
	Props *[]PropertyQueryOverride `json:"props,omitempty"`
}

// PropertyQueryMutationTarget represents the target can be a mrn (space mrn) or a filter query. It is only valid to provide one of the parameters.
type PropertyQueryMutationTarget struct {

	// MRN of the target. For example, a space MRN, or asset MRN. (Optional.)
	Mrn *String `json:"mrn,omitempty"`
	// For a future iteration. The mql for the filter to apply properties to. (Optional.)
	Filter *String `json:"filter,omitempty"`
}

// PropertyQueryOverride represents property query override.
type PropertyQueryOverride struct {
	// The property to apply the action to. (Required.)
	PropertyMrn String `json:"propertyMrn"`

	// The property query. Must be provided for the SET and CHECK actions. It must not be provided for the UNSET action. (Optional.)
	Mql *String `json:"mql,omitempty"`
}

// QueryPackAddInput represents query pack add input.
type QueryPackAddInput struct {
	// The mrn of the space. (Required.)
	SpaceMrn String `json:"spaceMrn"`
	// RFC2397, base64 encoded policy bundle. (Required.)
	Dataurl String `json:"dataurl"`

	// Force. (Optional.)
	Force *Boolean `json:"force,omitempty"`
}

// RatedPoliciesInput represents rated policies input.
type RatedPoliciesInput struct {
	// The mrn of the space. (Required.)
	SpaceMrn String `json:"spaceMrn"`

	// Count. (Optional.)
	Count *Int `json:"count,omitempty"`
}

// RegistrationTokenInput
type RegistrationTokenInput struct {

	// (Optional.)
	SpaceMrn *String `json:"spaceMrn,omitempty"`
	// (Optional.)
	ScopeMrn *String `json:"scopeMrn,omitempty"`
	// (Optional.)
	ExpiresIn *Int `json:"expiresIn,omitempty"`
	// (Optional.)
	NoExpiration *Boolean `json:"noExpiration,omitempty"`
	// (Optional.)
	Description *String `json:"description,omitempty"`
	// (Optional.)
	Roles *[]RoleInput `json:"roles,omitempty"`
	// (Optional.)
	Labels *[]KeyValueInput `json:"labels,omitempty"`
}

// RegistrationTokenOrder
type RegistrationTokenOrder struct {
	// (Required.)
	Direction OrderDirection `json:"direction"`
	// (Required.)
	Field RegistrationTokenOrderField `json:"field"`
}

// RemediationFilter represents filter the remediation scripts.
type RemediationFilter struct {

	// filter by remediation script type. (Optional.)
	ScriptTypes *[]*RemediationScriptType `json:"scriptTypes,omitempty"`
	// filter by package namespace, e.g., ubuntu:18.04. (Optional.)
	Namespace *String `json:"namespace,omitempty"`
	// filter by package ecosystem, e.g., AmazonLinux:2023 It is the ecosystem.ID in the RemediationResponse. (Optional.)
	Ecosystem *String `json:"ecosystem,omitempty"`
	// filter by affected assets and their packages. (Optional.)
	FilterAffected *Boolean `json:"filterAffected,omitempty"`
}

// RemediationInput represents input for the remediation script.
type RemediationInput struct {
	// (Required.)
	ScopeMrn String `json:"scopeMrn"`

	// (Optional.)
	AdvisoryID *ID `json:"advisoryId,omitempty"`
	// (Optional.)
	VulnerabilityID *ID `json:"vulnerabilityId,omitempty"`
	// (Optional.)
	Packages *[]RemediationPackageFields `json:"packages,omitempty"`
	// (Optional.)
	Filter *RemediationFilter `json:"filter,omitempty"`
}

// RemediationPackageFields represents we need to know the packages to generate the remediation script.
type RemediationPackageFields struct {
	// Package name. (Required.)
	Name String `json:"name"`

	// Package version which fixes the vulnerability. (Optional.)
	FixedVersion *String `json:"fixedVersion,omitempty"`
}

// RemoveOrganizationMembershipInput
type RemoveOrganizationMembershipInput struct {
	// (Required.)
	OrgMrn String `json:"orgMrn"`
	// (Required.)
	UserMrn String `json:"userMrn"`
}

// RemoveSpaceMembershipInput
type RemoveSpaceMembershipInput struct {
	// (Required.)
	SpaceMrn String `json:"spaceMrn"`
	// (Required.)
	UserMrn String `json:"userMrn"`
}

// RenderedAssetQueryDataInput represents rendered asset query data input.
type RenderedAssetQueryDataInput struct {
	// assetMrn is the MRN of the asset to query. (Required.)
	AssetMrn String `json:"assetMrn"`
	// queryMrn is the MRN of the query to get the data for. (Required.)
	QueryMrn String `json:"queryMrn"`
}

// ReportViewedInfo represents report viewed info. Only 1 page can be specified at a time.
type ReportViewedInfo struct {

	// Org view page info. (Optional.)
	OrgView *OrgViewPageInfo `json:"orgView,omitempty"`
	// Asset overview page info. (Optional.)
	AssetOverview *AssetOverviewPageInfo `json:"assetOverview,omitempty"`
	// CI/CD project page info. (Optional.)
	CicdProject *CiCdProjectPageInfo `json:"cicdProject,omitempty"`
	// CI/CD job page info. (Optional.)
	CicdJob *CiCdJobPageInfo `json:"cicdJob,omitempty"`
	// Vulnerability dashboard page info. (Optional.)
	VulnerabilityDashboard *VulnerabilityDashboardPageInfo `json:"vulnerabilityDashboard,omitempty"`
	// Security dashboard page info. (Optional.)
	SecurityDashboard *SecurityDashboardPageInfo `json:"securityDashboard,omitempty"`
}

// ReportViewedInput represents report viewed input.
type ReportViewedInput struct {
	// (Required.)
	Page ReportViewedPage `json:"page"`
	// (Required.)
	Info ReportViewedInfo `json:"info"`
}

// RevokeRegistrationTokenInput
type RevokeRegistrationTokenInput struct {
	// (Required.)
	Mrn String `json:"mrn"`
}

// RiskFactorFilter represents risk factor filter by mrn.
type RiskFactorFilter struct {

	// MRN filter query. (Optional.)
	Mrns *RiskFactorFilterQuery `json:"mrns,omitempty"`
	// Risk factor indicators to filter on. They are ORed together. (Optional.)
	Indicators *[]String `json:"indicators,omitempty"`
}

// RiskFactorFilterQuery represents risk factor filter query.
type RiskFactorFilterQuery struct {

	// Any terms here will be ANDed. (Optional.)
	And *[]String `json:"and,omitempty"`
	// Any terms here will be ORed. (Optional.)
	Or *[]String `json:"or,omitempty"`
}

// RiskFactorMagnitudeModification
type RiskFactorMagnitudeModification struct {
	// Risk factor magnitude: -100 to 100. (Required.)
	Value Int `json:"value"`
	// Risk factor is toxic. (Required.)
	IsToxic Boolean `json:"isToxic"`
}

// RoleInput
type RoleInput struct {
	// (Required.)
	Mrn String `json:"mrn"`
}

// S3ConfigurationOptionsInput represents s3 integration input.
type S3ConfigurationOptionsInput struct {
	// (Required.)
	Output BucketOutputType `json:"output"`
	// (Required.)
	Endpoint String `json:"endpoint"`
	// (Required.)
	Bucket String `json:"bucket"`
	// (Required.)
	UseLegacyList Boolean `json:"useLegacyList"`
	// (Required.)
	UsePathStyle Boolean `json:"usePathStyle"`
	// (Required.)
	AccessKey String `json:"accessKey"`
	// (Required.)
	SecretAccessKey String `json:"secretAccessKey"`
}

// SSOProviderInput
type SSOProviderInput struct {
	// (Required.)
	IdpEntityID String `json:"idpEntityID"`
	// (Required.)
	SsoURL String `json:"ssoUrl"`
	// (Required.)
	RpEntityID String `json:"rpEntityID"`
	// (Required.)
	X509Fingerprints []String `json:"x509Fingerprints"`
	// (Required.)
	Enabled Boolean `json:"enabled"`

	// (Optional.)
	X509Certificates *[]String `json:"x509Certificates,omitempty"`
}

// ScanConfigurationInput represents scanConfigurationInput is the input options for the AWS integration scan configuration.
type ScanConfigurationInput struct {

	// (Optional.)
	AccountScan *Boolean `json:"accountScan,omitempty"`
	// (Optional.)
	Ec2Scan *Boolean `json:"ec2Scan,omitempty"`
	// (Optional.)
	EcrScan *Boolean `json:"ecrScan,omitempty"`
	// (Optional.)
	EcsScan *Boolean `json:"ecsScan,omitempty"`
	// (Optional.)
	CronScaninHours *Int `json:"cronScaninHours,omitempty"`
	// (Optional.)
	EventScanTriggers *[]*AWSEventPatternInput `json:"eventScanTriggers,omitempty"`
	// (Optional.)
	Ec2ScanOptions *Ec2ScanOptionsInput `json:"ec2ScanOptions,omitempty"`
	// (Optional.)
	VpcConfiguration *VPCConfigurationInput `json:"vpcConfiguration,omitempty"`
}

// ScimGroupMapping represents a mapping of SCIM group to organization or its spaces and an IAM role.
type ScimGroupMapping struct {
	// IAM role to be assigned to all members of the SCIM group. (Required.)
	IamRole String `json:"iamRole"`

	// MRN of the space to be mapped. (Optional.)
	SpaceMrn *String `json:"spaceMrn,omitempty"`
	// MRN of the organization to be mapped. (Optional.)
	OrgMrn *String `json:"orgMrn,omitempty"`
}

// ScopeDocumentOptionsInput represents input options for the scope of the document.
type ScopeDocumentOptionsInput struct {
	// The MRN of the scope to generate the report for. (Required.)
	ScopeMrn String `json:"scopeMrn"`
}

// ScoreRange represents score range.
type ScoreRange struct {
	// Begin. (Required.)
	Begin Int `json:"begin"`
	// End. (Required.)
	End Int `json:"end"`
}

// SearchFilters
type SearchFilters struct {

	// (Optional.)
	AggregateScoreType *AggregateScoreType `json:"aggregateScoreType,omitempty"`
}

// SecurityDashboardPageInfo represents security dashboard pagination info.
type SecurityDashboardPageInfo struct {
	// organization mrn. (Required.)
	OrgMrn String `json:"orgMrn"`
	// space mrn. (Required.)
	SpaceMrn String `json:"spaceMrn"`
}

// SentinelOneConfigurationOptionsInput represents sentinelOne integration input.
type SentinelOneConfigurationOptionsInput struct {
	// The host of the SentinelOne integration. (Required.)
	Host String `json:"host"`
	// The account ID of the SentinelOne integration. (Required.)
	Account String `json:"account"`

	// certificate or client secret is required. (Optional.)
	Certificate *String `json:"certificate,omitempty"`
	// (Optional.)
	ClientSecret *String `json:"clientSecret,omitempty"`
	// createAssets is a flag to create assets in the backend when they are not found. (Optional.)
	CreateAssets *Boolean `json:"createAssets,omitempty"`
}

// ServiceAccountOrder
type ServiceAccountOrder struct {
	// (Required.)
	Direction OrderDirection `json:"direction"`
	// (Required.)
	Field ServiceAccountOrderField `json:"field"`
}

// SetAssetAnnotationsInput
type SetAssetAnnotationsInput struct {
	// (Required.)
	SpaceMrn String `json:"spaceMrn"`
	// (Required.)
	Mrn String `json:"mrn"`
	// (Required.)
	Annotations []KeyValueInput `json:"annotations"`
}

// SetCustomPolicyInput represents uploads policy content.
type SetCustomPolicyInput struct {
	// RFC2397, base64 encoded policy bundle. (Required.)
	Dataurl String `json:"dataurl"`

	// The mrn of the space. (Optional.)
	SpaceMrn *String `json:"spaceMrn,omitempty"`
	// Scope mrn is the mrn of the space or platform. (Optional.)
	ScopeMrn *String `json:"scopeMrn,omitempty"`
	// Overwrites the policy if it already exists. (Optional.)
	Overwrite *Boolean `json:"overwrite,omitempty"`
}

// SetCustomQueryPackInput represents creates a new query pack with the provided content.
type SetCustomQueryPackInput struct {
	// The mrn of the space. (Required.)
	SpaceMrn String `json:"spaceMrn"`
	// RFC2397, base64 encoded policy bundle. (Required.)
	Dataurl String `json:"dataurl"`

	// Overwrites the query pack if it already exists. (Optional.)
	Overwrite *Boolean `json:"overwrite,omitempty"`
}

// SetOrganizationMembershipInput
type SetOrganizationMembershipInput struct {
	// (Required.)
	OrgMrn String `json:"orgMrn"`
	// (Required.)
	UserMrn String `json:"userMrn"`
	// (Required.)
	Roles []RoleInput `json:"roles"`
}

// SetRoleInput
type SetRoleInput struct {
	// (Required.)
	EntityMrn String `json:"entityMrn"`
	// (Required.)
	Roles []RoleInput `json:"roles"`
}

// SetRolesInput
type SetRolesInput struct {

	// (Optional.)
	SpaceMrn *String `json:"spaceMrn,omitempty"`
	// (Optional.)
	ScopeMrn *String `json:"scopeMrn,omitempty"`
	// (Optional.)
	Updates *[]SetRoleInput `json:"updates,omitempty"`
}

// SetSSOProviderInput
type SetSSOProviderInput struct {
	// (Required.)
	OrganizationMrn String `json:"organizationMrn"`

	// (Optional.)
	Provider *SSOProviderInput `json:"provider,omitempty"`
}

// SetScimGroupMappingInput represents input type for setScimGroupMapping.
type SetScimGroupMappingInput struct {
	// Organization MRN for with the SCIM mapping is defined. (Required.)
	OrgMrn String `json:"orgMrn"`
	// Group Identifier which is the SCIM displayName. (Required.)
	Group String `json:"group"`
	// Mappings of SCIM group to organization or its spaces with IAM role. (Required.)
	Mappings []ScimGroupMapping `json:"mappings"`
}

// SetSpaceMembershipInput
type SetSpaceMembershipInput struct {
	// (Required.)
	SpaceMrn String `json:"spaceMrn"`
	// (Required.)
	UserMrn String `json:"userMrn"`
	// (Required.)
	Roles []RoleInput `json:"roles"`
}

// ShodanConfigurationOptionsInput represents shodan integration input.
type ShodanConfigurationOptionsInput struct {
	// Shodan API token. (Required.)
	Token String `json:"token"`

	// Shodan scan targets. Can be a domain, IP or CIDR. (Optional.)
	Targets *[]String `json:"targets,omitempty"`
}

// SlackConfigurationOptionsInput represents slack integration input.
type SlackConfigurationOptionsInput struct {

	// (Optional.)
	SlackToken *String `json:"slackToken,omitempty"`
}

// SnowflakeConfigurationOptionsInput represents snowflake integration input.
type SnowflakeConfigurationOptionsInput struct {
	// (Required.)
	AccountID String `json:"accountId"`
	// (Required.)
	Database String `json:"database"`
	// (Required.)
	Schema String `json:"schema"`
	// (Required.)
	Region String `json:"region"`
	// (Required.)
	Warehouse String `json:"warehouse"`
	// (Required.)
	Username String `json:"username"`
	// (Required.)
	Password String `json:"password"`

	// (Optional.)
	Role *String `json:"role,omitempty"`
}

// SpacePolicySummaryInput represents spacePolicySummaryInput contains the input parameters for the spacePolicySummary query.
type SpacePolicySummaryInput struct {
	// spaceMrn is the MRN of the space. Statistics will be calculated for the provided policy MRN in this space. (Required.)
	SpaceMrn String `json:"spaceMrn"`
	// policyMrn is the MRN of the policy to summarize. (Required.)
	PolicyMrn String `json:"policyMrn"`
}

// SpaceSettingsInput represents space settings input.
type SpaceSettingsInput struct {

	// Terminated assets configuration. (Optional.)
	TerminatedAssetsConfiguration *TerminatedAssetsConfigurationInput `json:"terminatedAssetsConfiguration,omitempty"`
	// Unused service accounts configuration. (Optional.)
	UnusedServiceAccountsConfiguration *UnusedServiceAccountsConfigurationInput `json:"unusedServiceAccountsConfiguration,omitempty"`
	// Garbage collect assets configuration. (Optional.)
	GarbageCollectAssetsConfiguration *GarbageCollectAssetsConfigurationInput `json:"garbageCollectAssetsConfiguration,omitempty"`
	// Platform vulnerability configuration. (Optional.)
	PlatformVulnerabilityConfiguration *PlatformVulnerabilityConfigurationInput `json:"platformVulnerabilityConfiguration,omitempty"`
	// EOL platform configuration. (Optional.)
	EolAssetsConfiguration *EolAssetsConfigurationInput `json:"eolAssetsConfiguration,omitempty"`
	// Cases configuration. (Optional.)
	CasesConfiguration *CasesConfigurationInput `json:"casesConfiguration,omitempty"`
	// MVD v2 scanning configuration. (Optional.)
	MvdV2ScanningConfiguration *MvdV2ScanningConfigurationInput `json:"mvdV2ScanningConfiguration,omitempty"`
}

// SpaceVulnerabilitiesInput represents space Vulnerability inputs.
type SpaceVulnerabilitiesInput struct {
	// space mrn. (Required.)
	SpaceMrn String `json:"spaceMrn"`

	// order type. (Optional.)
	OrderType *VulnerabilityOrderType `json:"orderType,omitempty"`
	// first. (Optional.)
	Count *Int `json:"count,omitempty"`
}

// SpaceVulnerabilityReportInput represents input data for a space vulnerability report.
type SpaceVulnerabilityReportInput struct {
	// (Required.)
	SpaceMrn ID `json:"spaceMrn"`

	// (Optional.)
	FormatType *FormatType `json:"formatType,omitempty"`
}

// SubscriptionItem
type SubscriptionItem struct {
	// (Required.)
	PriceID String `json:"priceID"`
	// (Required.)
	Quantity Int `json:"quantity"`
}

// SuppressIntegrationMessageInput represents suppressIntegrationMessageInput contains the inputs needed to suppress (remove) an integration message.
type SuppressIntegrationMessageInput struct {
	// (Required.)
	Mrn String `json:"mrn"`
	// (Required.)
	Message String `json:"message"`

	// (Optional.)
	Identifier *String `json:"identifier,omitempty"`
}

// TerminatedAssetsConfigurationInput represents terminated assets configuration input.
type TerminatedAssetsConfigurationInput struct {

	// Whether to cleanup terminated assets. (Optional.)
	Cleanup *Boolean `json:"cleanup,omitempty"`
}

// TicketContextInput represents fetch Jira ticket context information.
type TicketContextInput struct {
	// The MRN of the scope for which the context is fetched. (Required.)
	ScopeMrn String `json:"scopeMrn"`

	// Jira ticket context parameters. (Optional.)
	Jira *JiraTicketContextInput `json:"jira,omitempty"`
	// Azure Devops ticket context parameters. (Optional.)
	AzureDevOps *AzureDevopsTicketContextInput `json:"azureDevops,omitempty"`
	// Zendesk ticket context parmeters. (Optional.)
	Zendesk *ZendeskTicketContextInput `json:"zendesk,omitempty"`
}

// TicketingIntegrationsInput represents ticketingIntegrationsInput describes the input for listing ticketing integrations.
type TicketingIntegrationsInput struct {
	// (Required.)
	SpaceMrn String `json:"spaceMrn"`
}

// TimestampFilter represents timestamp filter.
type TimestampFilter struct {
	// RFC3339 timestamp. (Required.)
	Timestamp String `json:"timestamp"`
	// Comparison operator. (Required.)
	Operator ComparisonOperator `json:"operator"`
}

// TopVulnerabilityInput represents top Vulnerability input.
type TopVulnerabilityInput struct {
	// space mrn. (Required.)
	SpaceMrn String `json:"spaceMrn"`
}

// TriggerActionInput represents inputs used to trigger an action on a client integration.
type TriggerActionInput struct {
	// (Required.)
	Mrn String `json:"mrn"`
	// (Required.)
	Type ActionType `json:"type"`

	// (Optional.)
	ActionOptions *TriggerActionOptionsInput `json:"actionOptions,omitempty"`
}

// TriggerActionOptionsInput represents inputs options used to trigger an action on a client integration.
type TriggerActionOptionsInput struct {

	// Optional source identifier, e.g. AWS account id. (Optional.)
	Identifiers *[]String `json:"identifiers,omitempty"`
	// Optional - AWS scan options. (Optional.)
	AwsScanOptions *AwsScanOptions `json:"awsScanOptions,omitempty"`
}

// UnusedServiceAccountsConfigurationInput represents unused service accounts configuration input.
type UnusedServiceAccountsConfigurationInput struct {

	// Whether to cleanup unused service accounts. (Optional.)
	Cleanup *Boolean `json:"cleanup,omitempty"`
}

// UpdateAPITokenInput represents input used when updating an API token name or description.
type UpdateAPITokenInput struct {
	// (Required.)
	Mrn String `json:"mrn"`

	// (Optional.)
	Name *String `json:"name,omitempty"`
	// (Optional.)
	Description *String `json:"description,omitempty"`
}

// UpdateAgentInput represents inputs for updating agents.
type UpdateAgentInput struct {
	// (Required.)
	AgentMrn String `json:"agentMrn"`

	// (Optional.)
	Notes *String `json:"notes,omitempty"`
}

// UpdateClientIntegrationConfigurationInput represents input for updating a client integration.
type UpdateClientIntegrationConfigurationInput struct {
	// (Required.)
	Mrn String `json:"mrn"`
	// (Required.)
	Type ClientIntegrationType `json:"type"`
	// (Required.)
	ConfigurationOptions ClientIntegrationConfigurationInput `json:"configurationOptions"`

	// (Optional.)
	Name *String `json:"name,omitempty"`
}

// UpdateClientIntegrationNameInput represents inputs to change the name of a client integration.
type UpdateClientIntegrationNameInput struct {
	// (Required.)
	Mrn String `json:"mrn"`
	// (Required.)
	Name String `json:"name"`
}

// UpdateFindingsSLAInput
type UpdateFindingsSLAInput struct {
	// The rating to which this SLA applies. (Required.)
	Rating ScoreRating `json:"rating"`
	// The target number of days to resolve a finding. (Required.)
	DaysToResolve Int `json:"daysToResolve"`
	// The number of days before a warning is issued. (Required.)
	DaysBeforeWarning Int `json:"daysBeforeWarning"`
}

// UpdateOrganizationInput represents update organization input.
type UpdateOrganizationInput struct {
	// MRN. (Required.)
	Mrn String `json:"mrn"`
	// Name. (Required.)
	Name String `json:"name"`

	// Description. (Optional.)
	Description *String `json:"description,omitempty"`
}

// UpdateSLAsInput
type UpdateSLAsInput struct {
	// SLAs for findings. (Required.)
	Findings []UpdateFindingsSLAInput `json:"findings"`
}

// UpdateSecurityModelInput
type UpdateSecurityModelInput struct {
	// The mrn of the space. (Required.)
	ScopeMrn String `json:"scopeMrn"`

	// SLAs. (Optional.)
	Slas *UpdateSLAsInput `json:"slas,omitempty"`
}

// UpdateServiceAccountInput represents input used when updating service account name, notes, and labels.
type UpdateServiceAccountInput struct {
	// (Required.)
	Mrn String `json:"mrn"`

	// (Optional.)
	Name *String `json:"name,omitempty"`
	// (Optional.)
	Notes *String `json:"notes,omitempty"`
	// (Optional.)
	Labels *[]*KeyValueInput `json:"labels,omitempty"`
}

// UpdateSpaceInput represents update space input.
type UpdateSpaceInput struct {
	// MRN. (Required.)
	Mrn String `json:"mrn"`
	// Name. (Required.)
	Name String `json:"name"`

	// Description. (Optional.)
	Description *String `json:"description,omitempty"`
	// Settings. (Optional.)
	Settings *SpaceSettingsInput `json:"settings,omitempty"`
}

// UpdateUserInput
type UpdateUserInput struct {
	// (Required.)
	Name String `json:"name"`
}

// UpdateWorkspaceInput represents update workspace input.
type UpdateWorkspaceInput struct {
	// MRN. (Required.)
	Mrn String `json:"mrn"`

	// The name of the workspace. (Optional.)
	Name *String `json:"name,omitempty"`
	// Description of the workspace. (Optional.)
	Description *String `json:"description,omitempty"`
	// Workspace selections. (Optional.)
	Selections *WorkspaceSelectionsInput `json:"selections,omitempty"`
}

// UploadFrameworkInput represents upload framework input.
type UploadFrameworkInput struct {
	// The mrn of the space to which the framework belongs. (Required.)
	SpaceMrn String `json:"spaceMrn"`
	// RFC2397, base64 encoded policy bundle. (Required.)
	Dataurl String `json:"dataurl"`
}

// VPCConfigurationInput represents vPCConfigurationInput describes the options for the VPCs used for the scanners. Setting useDefaultVPC to true will create the mondoo scanners in the AWS account default VPC. Setting useDefaultVPC to false will lead to the lambda function creating the VPC for the scanners in each scanning region.
type VPCConfigurationInput struct {

	// (Optional.)
	UseDefaultVPC *Boolean `json:"useDefaultVPC,omitempty"`
	// (Optional.)
	UseMondooVPC *Boolean `json:"useMondooVPC,omitempty"`
	// (Optional.)
	CIDR *String `json:"CIDR,omitempty"`
	// (Optional.)
	VpcFlavour *VPCFlavour `json:"vpcFlavour,omitempty"`
}

// VulnDashboardStatsInput represents vulnerability Dashboard stats input.
type VulnDashboardStatsInput struct {
	// space mrn. (Required.)
	SpaceMrn String `json:"spaceMrn"`
}

// VulnerabilityDashboardPageInfo represents vuln Dashboard pagination info.
type VulnerabilityDashboardPageInfo struct {
	// organization mrn. (Required.)
	OrgMrn String `json:"orgMrn"`
	// space mrn. (Required.)
	SpaceMrn String `json:"spaceMrn"`
}

// VulnerabilityDocumentOptionsInput represents input options for the vulnerability of the document.
type VulnerabilityDocumentOptionsInput struct {
	// The ID of the vulnerability to generate the report for. (Required.)
	VulnerabilityID String `json:"vulnerabilityId"`
	// The MRN of the scope to generate the report for. (Required.)
	ScopeMrn String `json:"scopeMrn"`
}

// VulnerabilityScoreFilter represents vulnerability score filters.
type VulnerabilityScoreFilter struct {

	// Filter by vulnerability score type. (Optional.)
	ScoreType *VulnerabilityScoreType `json:"scoreType,omitempty"`
	// Filter by state. (Optional.)
	State *ScoreStateFilter `json:"state,omitempty"`
	// Optional query terms. Will return only vulnerabilities containing the term in their MRN. (Optional.)
	QueryTerms *[]String `json:"queryTerms,omitempty"`
	// filter vulnerabilities by findingMrn of a versioned software package e.g., finding versions of bash 5.0.1 by searching for //.../software/.../name/bash/5.0.1. (Optional.)
	SoftwareFindingMrn *String `json:"softwareFindingMrn,omitempty"`
	// filter by risk factor mrn. (Optional.)
	Risks *RiskFactorFilter `json:"risks,omitempty"`
}

// VulnerabilityScoreOrder represents vulnerability score order object.
type VulnerabilityScoreOrder struct {
	// Order direction. (Required.)
	Direction OrderDirection `json:"direction"`
	// VulnerabilityScore field. (Required.)
	Field VulnerabilityScoreOrderField `json:"field"`
}

// WIFAuthBindingOrder
type WIFAuthBindingOrder struct {
	// (Required.)
	Direction OrderDirection `json:"direction"`
	// (Required.)
	Field AuthBindingOrderField `json:"field"`
}

// WorkspaceConditionPossibleValuesInput
type WorkspaceConditionPossibleValuesInput struct {
	// Scope MRN. (Required.)
	ScopeMrn String `json:"scopeMrn"`

	// Query to filter values on. (Optional.)
	Query *String `json:"query,omitempty"`
	// String field. (Optional.)
	StringField *WorkspaceSelectionConditionStringField `json:"stringField,omitempty"`
	// Int field. (Optional.)
	IntField *WorkspaceSelectionConditionIntField `json:"intField,omitempty"`
	// Rating field. (Optional.)
	RatingField *WorkspaceSelectionConditionRatingField `json:"ratingField,omitempty"`
	// Key-value field. (Optional.)
	KeyValueField *WorkspaceSelectionConditionKeyValueField `json:"keyValueField,omitempty"`
}

// WorkspaceSelectionConditionInput represents workspace selection condition.
type WorkspaceSelectionConditionInput struct {
	// Operator determining how the condition is joined with the other conditions in the list. (Required.)
	Operator WorkspaceSelectionConditionOperator `json:"operator"`

	// String condition. (Optional.)
	StringCondition *WorkspaceSelectionStringConditionInput `json:"stringCondition,omitempty"`
	// Int condition. (Optional.)
	IntCondition *WorkspaceSelectionIntConditionInput `json:"intCondition,omitempty"`
	// Rating condition. (Optional.)
	RatingCondition *WorkspaceSelectionRatingConditionInput `json:"ratingCondition,omitempty"`
	// Key-value condition. (Optional.)
	KeyValueCondition *WorkspaceSelectionKeyValueConditionInput `json:"keyValueCondition,omitempty"`
}

// WorkspaceSelectionInput represents workspace selection defining conditions for selecting assets for a workspace.
type WorkspaceSelectionInput struct {
	// A list of conditions for the selection. (Required.)
	Conditions []WorkspaceSelectionConditionInput `json:"conditions"`
}

// WorkspaceSelectionIntConditionInput represents workspace selection condition int condition.
type WorkspaceSelectionIntConditionInput struct {
	// Field to match. (Required.)
	Field WorkspaceSelectionConditionIntField `json:"field"`
	// Operator to use. (Required.)
	Operator WorkspaceSelectionConditionNumericOperator `json:"operator"`
	// Values to match. Values are ORed together. (Required.)
	Values []Int `json:"values"`
}

// WorkspaceSelectionKeyValueConditionInput represents workspace selection key-value condition.
type WorkspaceSelectionKeyValueConditionInput struct {
	// Field to match. (Required.)
	Field WorkspaceSelectionConditionKeyValueField `json:"field"`
	// Operator to use. (Required.)
	Operator WorkspaceSelectionConditionKeyValueOperator `json:"operator"`
	// Values to match. Values are ORed together. (Required.)
	Values []KeyValueInput `json:"values"`
}

// WorkspaceSelectionRatingConditionInput represents workspace selection rating condition.
type WorkspaceSelectionRatingConditionInput struct {
	// Field to match. (Required.)
	Field WorkspaceSelectionConditionRatingField `json:"field"`
	// Operator to use. (Required.)
	Operator WorkspaceSelectionConditionRatingOperator `json:"operator"`
	// Values to match. Values are ORed together. (Required.)
	Values []ScoreRating `json:"values"`
}

// WorkspaceSelectionStringConditionInput represents workspace selection string condition.
type WorkspaceSelectionStringConditionInput struct {
	// Field to match. (Required.)
	Field WorkspaceSelectionConditionStringField `json:"field"`
	// Operator to use. (Required.)
	Operator WorkspaceSelectionConditionStringOperator `json:"operator"`
	// Values to match. Values are ORed together. (Required.)
	Values []String `json:"values"`
}

// WorkspaceSelectionsInput represents workspace selections input.
type WorkspaceSelectionsInput struct {
	// A list of workspace selections. (Required.)
	Selections []WorkspaceSelectionInput `json:"selections"`
}

// WorkspacesInput represents workspaces input.
type WorkspacesInput struct {
	// The scope of the workspaces to list. (Required.)
	ScopeMrn String `json:"scopeMrn"`

	// Query searches workspaces by name. (Optional.)
	Query *String `json:"query,omitempty"`
}

// ZendeskConfigurationOptionsInput represents zendesk integration input.
type ZendeskConfigurationOptionsInput struct {
	// (Required.)
	Subdomain String `json:"subdomain"`
	// (Required.)
	Email String `json:"email"`
	// (Required.)
	APIToken String `json:"apiToken"`
	// (Required.)
	AutoCloseTickets Boolean `json:"autoCloseTickets"`
	// (Required.)
	AutoCreateTickets Boolean `json:"autoCreateTickets"`

	// (Optional.)
	CustomFields *[]ZendeskCustomFieldInput `json:"customFields,omitempty"`
}

// ZendeskCustomFieldInput represents zendesk custom field input.
type ZendeskCustomFieldInput struct {
	// Field ID. (Required.)
	ID Int `json:"id"`
	// Value. (Required.)
	Value String `json:"value"`
}

// ZendeskTicketConfigInput represents zendesk ticket configuration input.
type ZendeskTicketConfigInput struct {

	// The Zendesk priority. (Optional.)
	Priority *String `json:"priority,omitempty"`
	// The Zendesk ticket type. (Optional.)
	Type *String `json:"type,omitempty"`
}

// ZendeskTicketContextInput represents parameters for ZendeskTicketContext.
type ZendeskTicketContextInput struct {
	// The type of the ticket context. (Required.)
	Type ZendeskTicketContextType `json:"type"`
}
